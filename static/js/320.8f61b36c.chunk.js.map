{"version":3,"file":"static/js/320.8f61b36c.chunk.js","mappings":"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","sources":["components/common/PhraseItem.tsx","components/common/Letter.tsx","components/common/WordAffix.tsx","components/common/AffixItem.tsx","components/multiplicity/Letters.tsx","components/multiplicity/MultiplicityAffixPractice.tsx","components/multiplicity/Multiplicity.tsx"],"sourcesContent":["/**\r\n * Компонент фразы\r\n *\r\n * @author Markitanov Vadim\r\n * @since 14.05.2023\r\n */\r\nimport React from 'react'\r\n\r\ninterface PhraseItemProps {\r\n  kg: string | JSX.Element\r\n  ru: string\r\n}\r\n\r\nconst PhraseItem = (props: PhraseItemProps): JSX.Element => {\r\n  return (\r\n    <div>\r\n      - {props.kg}&nbsp;&nbsp;<i>- {props.ru}</i>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhraseItem\r\n","/**\r\n * Компонент буквы\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\nimport { Tooltip } from 'antd'\r\n\r\n/**\r\n * Гласные\r\n */\r\nexport const VOWELS_NAME: string = 'Гласная'\r\nexport const VOWELS: string[] = ['а', 'э', 'о', 'е', 'ө', 'у', 'ү', 'ы', 'и']\r\n\r\n/**\r\n * Звонкие согласные\r\n */\r\nexport const VOICED_CONSONANTS_NAME: string = 'Звонкая согласная'\r\nexport const VOICED_CONSONANTS: string[] = ['б', 'в', 'г', 'д', 'ж', 'з', 'л', 'м', 'н', 'ң', 'р', 'й']\r\n\r\n/**\r\n * Глухие согласные\r\n */\r\nexport const VOICELESS_CONSONANTS_NAME: string = 'Глухая согласная'\r\nexport const VOICELESS_CONSONANTS: string[] = ['п', 'ф', 'к', 'т', 'ш', 'с', 'х', 'ч', 'щ']\r\n\r\ninterface LetterProps {\r\n  value: string\r\n  bold?: boolean\r\n  underline?: boolean\r\n}\r\n\r\nconst Letter = (props: LetterProps): JSX.Element => {\r\n  const { value, bold = false, underline = false } = props\r\n\r\n  const getTooltip = (): string => {\r\n    if (VOWELS.includes(value)) {\r\n      return VOWELS_NAME\r\n    }\r\n\r\n    if (VOICED_CONSONANTS.includes(value)) {\r\n      return VOICED_CONSONANTS_NAME\r\n    }\r\n\r\n    if (VOICELESS_CONSONANTS.includes(value)) {\r\n      return VOICELESS_CONSONANTS_NAME\r\n    }\r\n\r\n    return 'Неизвестный тип буквы'\r\n  }\r\n\r\n  const getColor = (): string => {\r\n    if (VOWELS.includes(value)) {\r\n      return 'red'\r\n    }\r\n\r\n    if (VOICED_CONSONANTS.includes(value)) {\r\n      return 'green'\r\n    }\r\n\r\n    if (VOICELESS_CONSONANTS.includes(value)) {\r\n      return 'blue'\r\n    }\r\n\r\n    return 'black'\r\n  }\r\n\r\n  const getBold = (): 'bold' | undefined => {\r\n    return bold ? 'bold' : undefined\r\n  }\r\n\r\n  const getUnderline = (): 'underline' | undefined => {\r\n    return underline ? 'underline' : undefined\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={getTooltip()}>\r\n    <span style={{ cursor: 'pointer', color: getColor(), fontWeight: getBold(), textDecoration: getUnderline() }}>\r\n      {value}\r\n    </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default Letter\r\n","/**\r\n * Компонент выделения аффиксов у слова\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\nimport Letter from './Letter'\r\n\r\ninterface WordAffixProps {\r\n  root: string\r\n  affix: string | JSX.Element\r\n}\r\n\r\nconst WordAffix = (props: WordAffixProps): JSX.Element => {\r\n  const { root, affix } = props\r\n  if (React.isValidElement(affix)) {\r\n    const letter = affix as JSX.Element\r\n    return <>\r\n      {root}<Letter value={letter.props.value as string} bold={true} underline={true}/>\r\n    </>\r\n  } else {\r\n    return (\r\n      <>\r\n        {root}<b><u>{affix as string}</u></b>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WordAffix\r\n","/**\r\n * Компонент аффикса\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\n\r\ninterface AffixItemProps {\r\n  value: string\r\n}\r\n\r\nconst AffixItem = (props: AffixItemProps): JSX.Element => {\r\n  const { value } = props\r\n  return (\r\n    <span style={{ color: 'orangered' }}>\r\n      <b>-{value}</b>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AffixItem\r\n","/**\r\n * Компонент\r\n *\r\n * @author Markitanov Vadim\r\n * @since 22.05.2023\r\n */\r\nimport React from 'react'\r\nimport { Space } from 'antd'\r\nimport Letter, { VOWELS, VOICED_CONSONANTS, VOICELESS_CONSONANTS } from '../common/Letter'\r\n\r\nconst Letters = (): JSX.Element => {\r\n  return (\r\n    <Space size={1} direction={'vertical'}>\r\n      <Space>\r\n        <span>Краткие гласные:</span> {VOWELS.map(value => (<Letter key={value} value={value} bold/>))}\r\n      </Space>\r\n      <Space>\r\n        <span>Звонкие согласные:</span>{VOICED_CONSONANTS.map(value => (<Letter key={value} value={value} bold/>))}\r\n      </Space>\r\n      <Space>\r\n        <span>Глухие согласные:</span> {VOICELESS_CONSONANTS.map(value => (<Letter key={value} value={value} bold/>))}\r\n      </Space>\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default Letters\r\n","/**\r\n * Компонент\r\n *\r\n * @author Markitanov Vadim\r\n * @since 22.05.2023\r\n */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Space, Checkbox, Tooltip } from 'antd'\r\nimport KgInput from '../common/KgInput'\r\nimport Letter, { VOWELS, VOICED_CONSONANTS, VOICELESS_CONSONANTS } from '../common/Letter'\r\nimport { QuestionCircleTwoTone, CheckCircleTwoTone, ExclamationCircleTwoTone } from '@ant-design/icons'\r\n\r\ninterface MultiplicityAffixPracticeProps {\r\n  word: string\r\n}\r\n\r\nconst MultiplicityAffixPractice = (props: MultiplicityAffixPracticeProps): JSX.Element => {\r\n  const { word } = props\r\n  const valueState = useState('')\r\n  const wordArray = word.split('')\r\n  const [answerState, setAnswerState] = useState<boolean | null>(null) // Состояние ответа: null - неизвестно, true - верно, false - неверно\r\n  const [showHint, setShowHint] = useState<boolean>(false)\r\n\r\n  const isVowels = (value: string): boolean => {\r\n    return VOWELS.includes(value)\r\n  }\r\n\r\n  const isVoicedConsonants = (value: string): boolean => {\r\n    return VOICED_CONSONANTS.includes(value)\r\n  }\r\n\r\n  const isVoicelessConsonants = (value: string): boolean => {\r\n    return VOICELESS_CONSONANTS.includes(value)\r\n  }\r\n\r\n  const getLastVowelLetter = (): string => {\r\n    let result: string = '-'\r\n    for (let i = wordArray.length - 1; i >= 0; i--) {\r\n      if (isVowels(wordArray[i]) && i !== wordArray.length - 1) {\r\n        result = wordArray[i]\r\n        break\r\n      }\r\n    }\r\n    return result\r\n  }\r\n  // Последняя гласная буква корня\r\n  const lastVowelLetter: string = getLastVowelLetter()\r\n  // Последняя буква слова\r\n  const lastLetter = wordArray[wordArray.length - 1]\r\n\r\n  let rightAffix = '-'\r\n  if (lastVowelLetter === 'а' || lastVowelLetter === 'я' || lastVowelLetter === 'ы') {\r\n    if (isVowels(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n      rightAffix = 'лар'\r\n    } else if (isVoicedConsonants(lastLetter)) {\r\n      rightAffix = 'дар'\r\n    } else if (isVoicelessConsonants(lastLetter)) {\r\n      rightAffix = 'тар'\r\n    }\r\n  } else if (lastVowelLetter === 'э' || lastVowelLetter === 'е' || lastVowelLetter === 'и') {\r\n    if (isVowels(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n      rightAffix = 'лер'\r\n    } else if (isVoicedConsonants(lastLetter)) {\r\n      rightAffix = 'дер'\r\n    } else if (isVoicelessConsonants(lastLetter)) {\r\n      rightAffix = 'тер'\r\n    }\r\n  } else if (lastVowelLetter === 'ө' || lastVowelLetter === 'ү') {\r\n    if (isVowels(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n      rightAffix = 'лөр'\r\n    } else if (isVoicedConsonants(lastLetter)) {\r\n      rightAffix = 'дөр'\r\n    } else if (isVoicelessConsonants(lastLetter)) {\r\n      rightAffix = 'төр'\r\n    }\r\n  } else if (lastVowelLetter === 'о' || lastVowelLetter === 'ё' || lastVowelLetter === 'у' || lastVowelLetter === 'ю') {\r\n    if (lastVowelLetter === 'о' || lastVowelLetter === 'ё') {\r\n      if (isVowels(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n        rightAffix = 'лор'\r\n      } else if (isVoicedConsonants(lastLetter)) {\r\n        rightAffix = 'дор'\r\n      } else if (isVoicelessConsonants(lastLetter)) {\r\n        rightAffix = 'тор'\r\n      }\r\n    } else if (lastVowelLetter === 'у' || lastVowelLetter === 'ю') {\r\n      if (isVowels(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n        rightAffix = 'лар'\r\n      } else if (isVoicedConsonants(lastLetter)) {\r\n        rightAffix = 'дар'\r\n      } else if (isVoicelessConsonants(lastLetter)) {\r\n        rightAffix = 'тар'\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (valueState[0] !== '') {\r\n      setAnswerState(valueState[0] === rightAffix)\r\n    } else {\r\n      setAnswerState(null)\r\n    }\r\n  }, [valueState[0]])\r\n\r\n  const AnswerStateIcon = (): JSX.Element => {\r\n    if (answerState === null) {\r\n      return (<QuestionCircleTwoTone twoToneColor={'orange'}/>)\r\n    }\r\n\r\n    if (answerState) {\r\n      return (<CheckCircleTwoTone twoToneColor=\"#52c41a\"/>)\r\n    }\r\n\r\n    return (<ExclamationCircleTwoTone twoToneColor={'red'}/>)\r\n  }\r\n\r\n  return (\r\n    <Space>\r\n      <div style={{ minWidth: '50px' }}>\r\n        {word}\r\n      </div>\r\n      <KgInput valueState={valueState} placeholder={'Впишите аффикс множественного числа'}/>\r\n      <AnswerStateIcon/>\r\n      <Tooltip title={'Показывать подсказку'}>\r\n        <Checkbox checked={showHint}\r\n                  onChange={() => {\r\n                    setShowHint(!showHint)\r\n                  }}/>\r\n      </Tooltip>\r\n      {showHint && <>\r\n          <b>{rightAffix}</b>Последняя гласная буква корня: <Letter value={lastVowelLetter}/>\r\n          Последняя буква слова: <Letter value={lastLetter}/>\r\n      </>}\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default MultiplicityAffixPractice\r\n","/**\r\n * Компонент\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React, { useEffect, useState } from 'react'\r\nimport WordAffix from '../common/WordAffix'\r\nimport AffixItem from '../common/AffixItem'\r\nimport Letter, { VOWELS_NAME, VOICED_CONSONANTS_NAME, VOICELESS_CONSONANTS_NAME } from '../common/Letter'\r\nimport Letters from './Letters'\r\nimport PhraseItem from '../common/PhraseItem'\r\nimport MultiplicityAffixPractice from './MultiplicityAffixPractice'\r\nimport { CaretUpOutlined } from '@ant-design/icons'\r\nimport { FloatButton } from 'antd'\r\n\r\nconst Multiplicity = (): JSX.Element => {\r\n  const [isAtTop, setIsAtTop] = useState(true)\r\n\r\n  const scrollUpHandler = (): void => {\r\n    scroll(0, 0)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (): void => {\r\n      const isTop = window.scrollY === 0\r\n      setIsAtTop(isTop)\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll)\r\n\r\n    // Очистка слушателя событий при размонтировании компонента\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [])\r\n\r\n  const getIsTop = (): string | undefined => {\r\n    if (isAtTop) {\r\n      return 'none'\r\n    } else {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Letters/><br/>\r\n      1. Форма множественного числа образуется путем присоединения к корню слова аффикса множественного числа <b>-лар</b>\r\n      <table>\r\n        <thead>\r\n        <tr>\r\n          <td colSpan={2}>Последняя гласная буква корня</td>\r\n          <td>Последняя буква корня</td>\r\n          <td>Аффикс</td>\r\n          <td>Пример</td>\r\n          <td>Перевод</td>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n          <td rowSpan={5} colSpan={2}>а, я, ы</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'китепкан'} affix={<Letter value={'а'}/>}/> - <WordAffix root={'китепкана'} affix={'лар'}/>\r\n          </td>\r\n          <td>\r\n            библиотека - библиотеки\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'шаа'} affix={<Letter value={'р'}/>}/> - <WordAffix root={'шаар'} affix={'лар'}/>\r\n          </td>\r\n          <td>\r\n            город - города\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'ада'} affix={<Letter value={'м'}/>}/> - <WordAffix root={'адам'} affix={'дар'}/>\r\n          </td>\r\n          <td>\r\n            человек - люди\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'мышы'} affix={<Letter value={'к'}/>}/> - <WordAffix root={'мышык'} affix={'тар'}/>\r\n          </td>\r\n          <td>\r\n            кот - коты\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td rowSpan={5} colSpan={2}>э, е, и</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лер'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'кем'} affix={<Letter value={'е'}/>}/> - <WordAffix root={'кеме'} affix={'лер'}/><br/>\r\n          </td>\r\n          <td>\r\n            корабль - корабли\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'музе'} affix={<Letter value={'й'}/>}/> - <WordAffix root={'музей'} affix={'лер'}/>\r\n          </td>\r\n          <td>\r\n            музей - музеи\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дер'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'мугали'} affix={<Letter value={'м'}/>}/> - <WordAffix root={'мугалим'} affix={'дер'}/>\r\n          </td>\r\n          <td>\r\n            учитель - учителя\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тер'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'ките'} affix={<Letter value={'п'}/>}/> - <WordAffix root={'китеп'} affix={'тер'}/>\r\n          </td>\r\n          <td>\r\n            книга - книги\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td rowSpan={5} colSpan={2}>ө ү</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лөр'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'сүрөтч'} affix={<Letter value={'ү'}/>}/> - <WordAffix root={'сүрөтчү'} affix={'лөр'}/>\r\n          </td>\r\n          <td>\r\n            художник - художники\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'ү'} affix={<Letter value={'й'}/>}/> - <WordAffix root={'үй'} affix={'лөр'}/>\r\n          </td>\r\n          <td>\r\n            дом - дома\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дөр'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'кө'} affix={<Letter value={'л'}/>}/> - <WordAffix root={'көл'} affix={'дөр'}/>\r\n          </td>\r\n          <td>\r\n            озеро - озера\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'төр'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'көйнө'} affix={<Letter value={'к'}/>}/> - <WordAffix root={'көйнөк'} affix={'төр'}/>\r\n          </td>\r\n          <td>\r\n            платье - платья\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td rowSpan={10}>о ё у ю</td>\r\n          <td rowSpan={5}>о ё</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лор'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'коро'} affix={<Letter value={'о'}/>}/> - <WordAffix root={'короо'} affix={'лор'}/>\r\n          </td>\r\n          <td>\r\n            двор - дворы\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'то'} affix={<Letter value={'й'}/>}/> - <WordAffix root={'той'} affix={'лор'}/>\r\n          </td>\r\n          <td>\r\n            пиршество - пиршества\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дор'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'ко'} affix={<Letter value={'л'}/>}/> - <WordAffix root={'кол'} affix={'дор'}/>\r\n          </td>\r\n          <td>\r\n            рука - руки\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тор'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'коно'} affix={<Letter value={'к'}/>}/> - <WordAffix root={'конок'} affix={'тор'}/>\r\n          </td>\r\n          <td>\r\n            гость - гости\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td rowSpan={5}>у ю</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'окууч'} affix={<Letter value={'у'}/>}/> - <WordAffix root={'окуучу'} affix={'лар'}/>\r\n          </td>\r\n          <td>\r\n            ученик - ученики\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'буй'} affix={<Letter value={'м'}/>}/> - <WordAffix root={'буйм'} affix={'дар'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'жоолу'} affix={<Letter value={'к'}/>}/> - <WordAffix root={'жоолук'} affix={'тар'}/>\r\n          </td>\r\n          <td>\r\n            платок - платки\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n      Место аффикса множественного числа - всегда после корня.<br/>\r\n      Аффиксы множественного числа универсальны, обслуживают не только имена существительные:\r\n      <table>\r\n        <tbody>\r\n        <tr>\r\n          <td><WordAffix root={'чоң'} affix={'дор'}/></td>\r\n          <td>большие; взрослые</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'жар'} affix={'таш'}/></td>\r\n          <td>молодые</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'кичинекей'} affix={'лер'}/></td>\r\n          <td>маленькие, малыши</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'тиги'} affix={'лер'}/></td>\r\n          <td>те</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'бу'} affix={'лар'}/></td>\r\n          <td>эти</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'булар ким'} affix={'дер'}/></td>\r\n          <td>кто это? (по отношению к группе лиц)</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n      <br/>\r\n      2. В роли подлежащего, сказуемого или дополнения в предложениях иногда выступают <b>собирательные</b> числительные, которые отвечают на вопрос <b>канчоо?</b> (сколько?). <br/>\r\n      Из всего семь: <br/>\r\n      бирөө, экөө (двое), үчөө (трое), төртөө (четверо), бешөө (пятеро), алтоо (шестеро), жетөө (семеро). <br/>\r\n      <PhraseItem kg={'Китепканада он адам:'} ru={'В библиотеке десять человек:'}/>\r\n      <PhraseItem kg={'бирөө - окутуучу,'} ru={'один - преподователь,'}/>\r\n      <PhraseItem kg={'үчөө - аспирант,'} ru={'трое - аспиранты,'}/>\r\n      <PhraseItem kg={'алтоо - студент,'} ru={'шестеро - студенты.'}/>\r\n      <div className={'center-block'}>УПРАЖНЕНИЯ</div>\r\n      <MultiplicityAffixPractice word={'кошуна'}/><br/>\r\n      <MultiplicityAffixPractice word={'театр'}/><br/>\r\n      <MultiplicityAffixPractice word={'адам'}/><br/>\r\n      <MultiplicityAffixPractice word={'бак'}/><br/>\r\n      <MultiplicityAffixPractice word={'текче'}/><br/>\r\n      <MultiplicityAffixPractice word={'батир'}/><br/>\r\n      <MultiplicityAffixPractice word={'көкчө'}/><br/>\r\n      <MultiplicityAffixPractice word={'тил'}/><br/>\r\n      <MultiplicityAffixPractice word={'адис'}/><br/>\r\n      <MultiplicityAffixPractice word={'күзгү'}/><br/>\r\n      <MultiplicityAffixPractice word={'күн'}/><br/>\r\n      <MultiplicityAffixPractice word={'сөз'}/><br/>\r\n      <MultiplicityAffixPractice word={'чөнтөк'}/><br/>\r\n      <MultiplicityAffixPractice word={'пальто'}/><br/>\r\n      <MultiplicityAffixPractice word={'кол'}/><br/>\r\n      <MultiplicityAffixPractice word={'стадион'}/><br/>\r\n      <MultiplicityAffixPractice word={'дос'}/><br/>\r\n      <MultiplicityAffixPractice word={'курбу'}/><br/>\r\n      <MultiplicityAffixPractice word={'комуз'}/><br/>\r\n      <MultiplicityAffixPractice word={'жоолук'}/><br/>\r\n      <FloatButton icon={<CaretUpOutlined/>} type=\"primary\" style={{ right: 20, display: getIsTop() }} onClick={scrollUpHandler}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Multiplicity\r\n"],"names":["props","_jsxs","children","kg","ru","VOWELS_NAME","VOWELS","VOICED_CONSONANTS_NAME","VOICED_CONSONANTS","VOICELESS_CONSONANTS_NAME","VOICELESS_CONSONANTS","value","_props$bold","bold","_props$underline","underline","_jsx","Tooltip","title","includes","style","cursor","color","fontWeight","undefined","textDecoration","root","affix","React","letter","_Fragment","Letter","Space","size","direction","map","word","valueState","useState","wordArray","split","_useState","_useState2","_slicedToArray","answerState","setAnswerState","_useState3","_useState4","showHint","setShowHint","isVowels","isVoicedConsonants","isVoicelessConsonants","lastVowelLetter","result","i","length","getLastVowelLetter","lastLetter","rightAffix","useEffect","AnswerStateIcon","QuestionCircleTwoTone","twoToneColor","CheckCircleTwoTone","ExclamationCircleTwoTone","minWidth","KgInput","placeholder","Checkbox","checked","onChange","isAtTop","setIsAtTop","handleScroll","isTop","window","scrollY","addEventListener","removeEventListener","Letters","colSpan","rowSpan","AffixItem","WordAffix","PhraseItem","className","MultiplicityAffixPractice","FloatButton","icon","CaretUpOutlined","type","right","display","onClick","scroll"],"sourceRoot":""}