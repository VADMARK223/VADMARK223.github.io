{"version":3,"file":"static/js/998.aa625bd8.chunk.js","mappings":"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","sources":["components/common/Letter.tsx","components/numerals/NumberTag.tsx","components/numerals/AnswerTag.tsx","../node_modules/@ant-design/icons-svg/es/asn/PlayCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlayCircleOutlined.js","components/numerals/NumberAudio.tsx","components/numerals/Numerals.tsx","service/utils.ts"],"sourcesContent":["/**\r\n * Компонент буквы\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\nimport { Tooltip } from 'antd'\r\n\r\n/**\r\n * Гласные\r\n */\r\nexport const VOWELS_NAME: string = 'Гласная'\r\nexport const VOWELS: string[] = ['а', 'е', 'ё', 'и', 'о', 'ө', 'у', 'ү', 'ы', 'э', 'ю', 'я']\r\n\r\n/**\r\n * Звонкие согласные\r\n */\r\nexport const VOICED_CONSONANTS_NAME: string = 'Звонкая согласная'\r\nexport const VOICED_CONSONANTS: string[] = ['б', 'в', 'г', 'д', 'ж', 'з', 'л', 'м', 'н', 'ң', 'р', 'й']\r\n\r\n/**\r\n * Глухие согласные\r\n */\r\nexport const VOICELESS_CONSONANTS_NAME: string = 'Глухая согласная'\r\nexport const VOICELESS_CONSONANTS: string[] = ['п', 'ф', 'к', 'т', 'ш', 'с', 'х', 'ч', 'щ', 'ц']\r\n\r\ninterface LetterProps {\r\n  value: string\r\n  bold?: boolean\r\n  underline?: boolean\r\n}\r\n\r\nconst Letter = (props: LetterProps): JSX.Element => {\r\n  const { value, bold = false, underline = false } = props\r\n\r\n  const getTooltip = (): string => {\r\n    if (VOWELS.includes(value)) {\r\n      return VOWELS_NAME\r\n    }\r\n\r\n    if (VOICED_CONSONANTS.includes(value)) {\r\n      return VOICED_CONSONANTS_NAME\r\n    }\r\n\r\n    if (VOICELESS_CONSONANTS.includes(value)) {\r\n      return VOICELESS_CONSONANTS_NAME\r\n    }\r\n\r\n    return 'Неизвестный тип буквы'\r\n  }\r\n\r\n  const getColor = (): string => {\r\n    if (VOWELS.includes(value)) {\r\n      return 'red'\r\n    }\r\n\r\n    if (VOICED_CONSONANTS.includes(value)) {\r\n      return 'green'\r\n    }\r\n\r\n    if (VOICELESS_CONSONANTS.includes(value)) {\r\n      return 'blue'\r\n    }\r\n\r\n    return 'black'\r\n  }\r\n\r\n  const getBold = (): 'bold' | undefined => {\r\n    return bold ? 'bold' : undefined\r\n  }\r\n\r\n  const getUnderline = (): 'underline' | undefined => {\r\n    return underline ? 'underline' : undefined\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={getTooltip()}>\r\n    <span style={{ cursor: 'pointer', color: getColor(), fontWeight: getBold(), textDecoration: getUnderline() }}>\r\n      {value}\r\n    </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default Letter\r\n","/**\r\n * Компонент\r\n *\r\n * @author Markitanov Vadim\r\n * @since 15.04.2023\r\n */\r\nimport React from 'react'\r\nimport { Tag } from 'antd'\r\nimport type { NumberData } from './NumberData'\r\n\r\ninterface NumberTagProps {\r\n  data: NumberData\r\n  clickCallback: (value: NumberData) => void\r\n}\r\n\r\nconst NumberTag = (props: NumberTagProps): JSX.Element => {\r\n  const clickHandler = (): void => {\r\n    props.clickCallback(props.data)\r\n  }\r\n  return (\r\n    <Tag color={props.data.color} style={{ cursor: 'pointer' }} onClick={clickHandler}>\r\n          <h4>\r\n            {props.data.label}\r\n          </h4>\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default NumberTag\r\n","/**\r\n * Компонент\r\n *\r\n * @author Markitanov Vadim\r\n * @since 15.04.2023\r\n */\r\nimport React from 'react'\r\nimport { Tag } from 'antd'\r\nimport type { NumberData } from './NumberData'\r\n\r\ninterface AnswerTagProps {\r\n  data: NumberData\r\n  closeCallback: (value: NumberData) => void\r\n}\r\n\r\nconst AnswerTag = (props: AnswerTagProps): JSX.Element => {\r\n  const closeHandler = (e: React.MouseEvent<HTMLElement>): void => {\r\n    props.closeCallback(props.data)\r\n    e.preventDefault()\r\n  }\r\n  return (\r\n    <Tag closable={true}\r\n         onClose={closeHandler}>\r\n      <b style={{ fontSize: '20px' }}>\r\n        {props.data.label}\r\n      </b>\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AnswerTag\r\n","// This icon file is generated automatically.\nvar PlayCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M719.4 499.1l-296.1-215A15.9 15.9 0 00398 297v430c0 13.1 14.8 20.5 25.3 12.9l296.1-215a15.9 15.9 0 000-25.8zm-257.6 134V390.9L628.5 512 461.8 633.1z\" } }] }, \"name\": \"play-circle\", \"theme\": \"outlined\" };\nexport default PlayCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlayCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlayCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlayCircleOutlined = function PlayCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlayCircleOutlinedSvg\n  }));\n};\nPlayCircleOutlined.displayName = 'PlayCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlayCircleOutlined);","/**\r\n * Компонент воспроизведения звука\r\n *\r\n * @author Markitanov Vadim\r\n * @since 11.05.2023\r\n */\r\nimport React, { useState } from 'react'\r\nimport { Space, Button } from 'antd'\r\nimport { PlayCircleOutlined } from '@ant-design/icons'\r\n\r\ninterface AudioControlProps {\r\n  src: string\r\n  kg: string\r\n  ru: string\r\n}\r\n\r\nconst NumberAudio = (props: AudioControlProps): JSX.Element => {\r\n  const { src, kg, ru } = props\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(false)\r\n  return (\r\n    <Space direction={'horizontal'}>\r\n      <Button type={'primary'}\r\n              icon={<PlayCircleOutlined/>}\r\n              onClick={() => {\r\n                setIsPlaying(!isPlaying)\r\n              }}>Прослушать</Button>\r\n      {kg} - {ru}\r\n      {isPlaying && <audio style={{ display: 'none' }} controls autoPlay src={src}\r\n                           onEnded={() => {\r\n                             setIsPlaying(false)\r\n                           }}/>}\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default NumberAudio\r\n","/**\r\n * Компонент обучения числам\r\n *\r\n * @author Markitanov Vadim\r\n * @since 11.03.2023\r\n */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Space, Button, InputNumber, Checkbox, Tooltip } from 'antd'\r\nimport { QuestionCircleTwoTone, CheckCircleTwoTone, ExclamationCircleTwoTone } from '@ant-design/icons'\r\nimport { generateRandomInteger, countDigitsInNumber } from '../../service/utils'\r\nimport NumberTag from './NumberTag'\r\nimport AnswerTag from './AnswerTag'\r\nimport type { NumberData } from './NumberData'\r\nimport number_0 from '../../assets/audio/0.mp3'\r\nimport number_1 from '../../assets/audio/1.mp3'\r\nimport number_2 from '../../assets/audio/2.mp3'\r\nimport number_3 from '../../assets/audio/3.mp3'\r\nimport number_4 from '../../assets/audio/4.mp3'\r\nimport number_5 from '../../assets/audio/5.mp3'\r\nimport number_6 from '../../assets/audio/6.mp3'\r\nimport number_7 from '../../assets/audio/7.mp3'\r\nimport number_8 from '../../assets/audio/8.mp3'\r\nimport number_9 from '../../assets/audio/9.mp3'\r\nimport number_10 from '../../assets/audio/10.mp3'\r\nimport number_20 from '../../assets/audio/20.mp3'\r\nimport number_30 from '../../assets/audio/30.mp3'\r\nimport number_40 from '../../assets/audio/40.mp3'\r\nimport number_50 from '../../assets/audio/50.mp3'\r\nimport number_60 from '../../assets/audio/60.mp3'\r\nimport number_70 from '../../assets/audio/70.mp3'\r\nimport number_80 from '../../assets/audio/80.mp3'\r\nimport number_90 from '../../assets/audio/90.mp3'\r\nimport number_100 from '../../assets/audio/100.mp3'\r\nimport number_1000 from '../../assets/audio/1000.mp3'\r\nimport NumberAudio from './NumberAudio'\r\n\r\nconst SHOW_DEBUG: boolean = false\r\nconst MAX_TARGET_VALUE: number = 9999\r\n\r\nconst Numerals = (): JSX.Element => {\r\n  const [targetNumber, setTargetNumber] = useState<number>(generateRandomInteger(MAX_TARGET_VALUE))\r\n  const [debug, setDebug] = useState<string>('-')\r\n  const [rightAnswer, setRightAnswer] = useState<string>('-')\r\n  const [answerState, setAnswerState] = useState<boolean | null>(null) // Состояние ответа: null - неизвестно, true - верно, false - неверно\r\n  const [answerStateText, setAnswerStateText] = useState<string>('')\r\n  const [answerTags, setAnswerTags] = useState<NumberData[]>([]) // Теги ответов\r\n  const [showHint, setShowHint] = useState<boolean>(false)\r\n  const [checkAnswerButtonDisabled, setCheckAnswerButtonDisabled] = useState<boolean>(true)\r\n  const [checkAnswerButtonTooltip, setCheckAnswerButtonTooltip] = useState<string>('Введите ответ кнопками ниже')\r\n\r\n  useEffect(() => {\r\n    setCheckAnswerButtonDisabled(answerTags.length === 0)\r\n    setCheckAnswerButtonTooltip(answerTags.length === 0 ? 'Введите ответ кнопками ниже' : 'Проверить ответ')\r\n  }, [answerTags])\r\n\r\n  const convertNumberToString = (value: number): string | null => {\r\n    if (value === 0) {\r\n      return 'нөл'\r\n    }\r\n    if (value === 1) {\r\n      return 'бир'\r\n    }\r\n    if (value === 2) {\r\n      return 'эки'\r\n    }\r\n    if (value === 3) {\r\n      return 'үч'\r\n    }\r\n    if (value === 4) {\r\n      return 'төрт'\r\n    }\r\n    if (value === 5) {\r\n      return 'беш'\r\n    }\r\n    if (value === 6) {\r\n      return 'алты'\r\n    }\r\n    if (value === 7) {\r\n      return 'жети'\r\n    }\r\n    if (value === 8) {\r\n      return 'сегиз'\r\n    }\r\n    if (value === 9) {\r\n      return 'тогуз'\r\n    }\r\n    if (value === 10) {\r\n      return 'он'\r\n    }\r\n    if (value === 20) {\r\n      return 'жыйырма'\r\n    }\r\n    if (value === 30) {\r\n      return 'отуз'\r\n    }\r\n    if (value === 40) {\r\n      return 'кырк'\r\n    }\r\n    if (value === 50) {\r\n      return 'элүү'\r\n    }\r\n    if (value === 60) {\r\n      return 'алтымыш'\r\n    }\r\n    if (value === 70) {\r\n      return 'жетимиш'\r\n    }\r\n    if (value === 80) {\r\n      return 'сексен'\r\n    }\r\n    if (value === 90) {\r\n      return 'токсон'\r\n    }\r\n    return null\r\n  }\r\n\r\n  const convertNumberByCountDigits = (value: number): string | null => {\r\n    if (value === 3) {\r\n      return 'жүз'\r\n    }\r\n    if (value === 4) {\r\n      return 'миң'\r\n    }\r\n    return null\r\n  }\r\n\r\n  const deepConvert = (value: number): string | null => {\r\n    if (convertNumberToString(value) != null) {\r\n      return convertNumberToString(value)\r\n    } else {\r\n      const cntDigits = countDigitsInNumber(value)\r\n      return `${convertNumberToString(value / Math.pow(10, cntDigits - 1)) as string} ${convertNumberByCountDigits(cntDigits) as string}`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const cnt = countDigitsInNumber(targetNumber)\r\n    const resultNumber = []\r\n    let newTargetNumber = targetNumber\r\n    for (let i = 0; i < cnt; i++) {\r\n      const current = newTargetNumber % 10 * Math.pow(10, i)\r\n      if (current !== 0 || cnt === 1) {\r\n        resultNumber.push(current)\r\n      }\r\n\r\n      newTargetNumber = Math.floor(newTargetNumber / 10)\r\n    }\r\n    setDebug(resultNumber.join(' '))\r\n    setRightAnswer(resultNumber.reverse().map(value => {\r\n      return deepConvert(value)\r\n    }).join(' '))\r\n    setAnswerState(null)\r\n    setAnswerTags([])\r\n  }, [targetNumber])\r\n\r\n  useEffect(() => {\r\n    if (answerState === null) {\r\n      setAnswerStateText('Введите ответ кнопками ниже')\r\n    } else if (answerState) {\r\n      setAnswerStateText('Ответ верный')\r\n    } else {\r\n      setAnswerStateText(`Правильный ответ: ${rightAnswer}`)\r\n    }\r\n  }, [answerState])\r\n\r\n  const generateHandler = (): void => {\r\n    setTargetNumber(generateRandomInteger(MAX_TARGET_VALUE))\r\n  }\r\n\r\n  const AnswerStateIcon = (): JSX.Element => {\r\n    if (answerState === null) {\r\n      return (<QuestionCircleTwoTone twoToneColor={'orange'}/>)\r\n    }\r\n\r\n    if (answerState) {\r\n      return (<CheckCircleTwoTone twoToneColor=\"#52c41a\"/>)\r\n    }\r\n\r\n    return (<ExclamationCircleTwoTone twoToneColor={'red'}/>)\r\n  }\r\n\r\n  const addTag = (numberData: NumberData): void => {\r\n    answerTags.push(numberData)\r\n    setAnswerTags([...answerTags])\r\n  }\r\n\r\n  const removeTag = (data: NumberData): void => {\r\n    answerTags.splice(answerTags.indexOf(data), 1)\r\n    setAnswerTags([...answerTags])\r\n  }\r\n\r\n  const checkHandler = (): void => {\r\n    const answerString = answerTags.map(value => value.label)\r\n    setAnswerState(rightAnswer.toLowerCase() === answerString.join(' ').toLowerCase())\r\n  }\r\n\r\n  const initNumbersTags: NumberData[] = [\r\n    { value: 0, label: 'нөл', color: '#87d068' },\r\n    { value: 1, label: 'бир', color: '#87d068' },\r\n    { value: 2, label: 'эки', color: '#87d068' },\r\n    { value: 3, label: 'үч', color: '#87d068' },\r\n    { value: 4, label: 'төрт', color: '#87d068' },\r\n    { value: 5, label: 'беш', color: '#87d068' },\r\n    { value: 6, label: 'алты', color: '#87d068' },\r\n    { value: 7, label: 'жети', color: '#87d068' },\r\n    { value: 8, label: 'сегиз', color: '#87d068' },\r\n    { value: 9, label: 'тогуз', color: '#87d068' },\r\n    { value: 10, label: 'он', color: '#87d068' },\r\n    { value: 20, label: 'жыйырма', color: '#2db7f5' },\r\n    { value: 30, label: 'отуз', color: '#2db7f5' },\r\n    { value: 40, label: 'кырк', color: '#2db7f5' },\r\n    { value: 50, label: 'элүү', color: '#2db7f5' },\r\n    { value: 60, label: 'алтымыш', color: '#2db7f5' },\r\n    { value: 70, label: 'жетимиш', color: '#2db7f5' },\r\n    { value: 80, label: 'сексен', color: '#2db7f5' },\r\n    { value: 90, label: 'токсон', color: '#2db7f5' },\r\n    { value: 100, label: 'жүз', color: '#f50' },\r\n    { value: 1000, label: 'миң', color: '#f50' }\r\n  ]\r\n\r\n  return (\r\n    <Space direction={'vertical'} style={{ width: '100vw' }}>\r\n      <Space direction={'vertical'} size={2}>\r\n        <NumberAudio src={number_0} kg={'Нөл'} ru={'Ноль'}/>\r\n        <NumberAudio src={number_1} kg={'Бир'} ru={'Один'}/>\r\n        <NumberAudio src={number_2} kg={'Эки'} ru={'Два'}/>\r\n        <NumberAudio src={number_3} kg={'Үч'} ru={'Три'}/>\r\n        <NumberAudio src={number_4} kg={'Төрт'} ru={'Четыре'}/>\r\n        <NumberAudio src={number_5} kg={'Беш'} ru={'Пять'}/>\r\n        <NumberAudio src={number_6} kg={'Алты'} ru={'Шесть'}/>\r\n        <NumberAudio src={number_7} kg={'Жети'} ru={'Семь'}/>\r\n        <NumberAudio src={number_8} kg={'Сегиз'} ru={'Восемь'}/>\r\n        <NumberAudio src={number_9} kg={'Тогуз'} ru={'Девять'}/>\r\n        <NumberAudio src={number_10} kg={'Он'} ru={'Десять'}/>\r\n        <NumberAudio src={number_20} kg={'Жыйырма'} ru={'Двадцать'}/>\r\n        <NumberAudio src={number_30} kg={'Отуз'} ru={'Тридцать'}/>\r\n        <NumberAudio src={number_40} kg={'Кырк'} ru={'Сорок'}/>\r\n        <NumberAudio src={number_50} kg={'Элүү'} ru={'Пятьдесят'}/>\r\n        <NumberAudio src={number_60} kg={'Алтымыш'} ru={'Шестьдесят'}/>\r\n        <NumberAudio src={number_70} kg={'Жетимиш'} ru={'Семьдесят'}/>\r\n        <NumberAudio src={number_80} kg={'Сексен'} ru={'Восемьдесят'}/>\r\n        <NumberAudio src={number_90} kg={'Токсон'} ru={'Девяносто'}/>\r\n        <NumberAudio src={number_100} kg={'Жүз'} ru={'Сто'}/>\r\n        <NumberAudio src={number_1000} kg={'Миң'} ru={'Тысяча'}/>\r\n\r\n      </Space>\r\n\r\n      <Space direction={'horizontal'}>\r\n        <div>\r\n          Переведите число:\r\n        </div>\r\n        <Space.Compact>\r\n          <InputNumber<number> value={targetNumber}\r\n                               min={0}\r\n                               max={MAX_TARGET_VALUE}\r\n                               onChange={(e) => {\r\n                                 if (e != null) {\r\n                                   setTargetNumber(e)\r\n                                 }\r\n                               }}/>\r\n          <Button type={'primary'} onClick={generateHandler}>Генерировать число</Button>\r\n        </Space.Compact>\r\n      </Space>\r\n      <Space>\r\n        <Checkbox checked={showHint}\r\n                  onChange={() => {\r\n                    setShowHint(!showHint)\r\n                  }}>Показывать подсказку</Checkbox>\r\n        {showHint\r\n          ? <>\r\n            Правильный ответ: {rightAnswer}\r\n          </>\r\n          : <></>}\r\n      </Space>\r\n      {SHOW_DEBUG\r\n        ? <p>\r\n          Отладка: {debug}\r\n        </p>\r\n        : null}\r\n      <hr/>\r\n      <Space wrap>\r\n        Ответ: {answerTags.map((value, index) => (<AnswerTag key={index} data={value} closeCallback={removeTag}/>))}\r\n      </Space>\r\n      <Space>\r\n        <Tooltip title={checkAnswerButtonTooltip}>\r\n          <Button type={'primary'} onClick={checkHandler} disabled={checkAnswerButtonDisabled}>Проверить</Button>\r\n        </Tooltip>\r\n        <AnswerStateIcon/>\r\n        <p>\r\n          {answerStateText}\r\n        </p>\r\n      </Space>\r\n      <hr/>\r\n      <Space size={1} wrap>\r\n        {initNumbersTags.map(value => (<NumberTag key={value.value} data={value} clickCallback={addTag}/>))}\r\n      </Space>\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default Numerals\r\n","import { VOWELS, VOICED_CONSONANTS, VOICELESS_CONSONANTS } from '../components/common/Letter'\r\n\r\n/**\r\n * @author Markitanov Vadim\r\n * @since 15.04.2023\r\n */\r\nexport const generateRandomInteger = (max: number): number => Math.floor(Math.random() * max) + 1\r\n\r\n/**\r\n * Количество цифр в числе.\r\n *\r\n * @param {number} value - число.\r\n * @returns {number} количество цифр\r\n */\r\nexport const countDigitsInNumber = (value: number): number => String(value).length\r\n\r\n/**\r\n * Метод перемешивания массива\r\n * @param {string[]} array\r\n * @returns {string[]}\r\n */\r\nexport const shuffleArray = (array: string[]): string[] => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n  return array\r\n}\r\n\r\n/**\r\n * Метод проверяет гласная ли это буква.\r\n * @param {string} letter - буква.\r\n * @returns {boolean} результат.\r\n */\r\nexport const isVowelLetter = (letter: string): boolean => {\r\n  return VOWELS.includes(letter)\r\n}\r\n\r\n/**\r\n * Метод проверяет звонкая согласная ли это буква.\r\n * @param {string} letter - буква.\r\n * @returns {boolean} результат.\r\n */\r\nexport const isVoicedConsonant = (letter: string): boolean => {\r\n  return VOICED_CONSONANTS.includes(letter)\r\n}\r\n\r\n/**\r\n * Метод проверяет глухая согласная ли это буква.\r\n * @param {string} letter - буква.\r\n * @returns {boolean} результат.\r\n */\r\nexport const isVoicelessConsonant = (letter: string): boolean => {\r\n  return VOICELESS_CONSONANTS.includes(letter)\r\n}\r\n"],"names":["VOWELS_NAME","VOWELS","VOICED_CONSONANTS_NAME","VOICED_CONSONANTS","VOICELESS_CONSONANTS_NAME","VOICELESS_CONSONANTS","props","value","_props$bold","bold","_props$underline","underline","_jsx","Tooltip","title","includes","children","style","cursor","color","fontWeight","undefined","textDecoration","Tag","data","onClick","clickCallback","label","closable","onClose","e","closeCallback","preventDefault","fontSize","PlayCircleOutlined","ref","React","AntdIcon","_objectSpread","icon","PlayCircleOutlinedSvg","displayName","src","kg","ru","_useState","useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","_jsxs","Space","direction","Button","type","display","controls","autoPlay","onEnded","MAX_TARGET_VALUE","generateRandomInteger","targetNumber","setTargetNumber","_useState3","_useState4","setDebug","_useState5","_useState6","rightAnswer","setRightAnswer","_useState7","_useState8","answerState","setAnswerState","_useState9","_useState10","answerStateText","setAnswerStateText","_useState11","_useState12","answerTags","setAnswerTags","_useState13","_useState14","showHint","setShowHint","_useState15","_useState16","checkAnswerButtonDisabled","setCheckAnswerButtonDisabled","_useState17","_useState18","checkAnswerButtonTooltip","setCheckAnswerButtonTooltip","useEffect","length","convertNumberToString","cnt","countDigitsInNumber","resultNumber","newTargetNumber","i","current","Math","pow","push","floor","join","reverse","map","cntDigits","concat","convertNumberByCountDigits","deepConvert","AnswerStateIcon","QuestionCircleTwoTone","twoToneColor","CheckCircleTwoTone","ExclamationCircleTwoTone","addTag","numberData","_toConsumableArray","removeTag","splice","indexOf","width","size","NumberAudio","number_0","number_1","number_2","number_3","number_4","number_5","number_6","number_7","number_8","number_9","number_10","number_20","number_30","number_40","number_50","number_60","number_70","number_80","number_90","number_100","number_1000","InputNumber","min","max","onChange","Checkbox","checked","_Fragment","wrap","index","AnswerTag","answerString","toLowerCase","disabled","NumberTag","random","String","shuffleArray","array","j","_ref","isVowelLetter","letter","isVoicedConsonant","isVoicelessConsonant"],"sourceRoot":""}