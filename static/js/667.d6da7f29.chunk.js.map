{"version":3,"file":"static/js/667.d6da7f29.chunk.js","mappings":"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","sources":["components/algorithmTables/CommonTable.tsx","components/algorithmTables/GenitiveTable.tsx","components/common/AffixItem.tsx","components/common/Letter.tsx","components/common/LettersPanel.tsx","components/common/WordAffix.tsx"],"sourcesContent":["/**\r\n * Общий компонент для алгоритмических таблиц\r\n *\r\n * @author Markitanov Vadim\r\n * @since 10.08.2023\r\n */\r\nimport React from 'react'\r\nimport LettersPanel from '../common/LettersPanel'\r\nimport { Space } from 'antd'\r\n\r\ninterface CommonTableProps {\r\n  title: string\r\n  children: JSX.Element | JSX.Element[] | string\r\n}\r\n\r\nconst CommonTable = (props: CommonTableProps): JSX.Element => {\r\n  const { title, children } = props\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      <Space direction={'vertical'}>\r\n        <LettersPanel/>\r\n        {children}\r\n      </Space>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CommonTable\r\n","/**\r\n * Компонент алгоритмическая таблица образования родительного падежа\r\n *\r\n * @author Markitanov Vadim\r\n * @since 23.06.2023\r\n */\r\nimport React from 'react'\r\nimport Letter, { VOWELS_NAME, VOICED_CONSONANTS_NAME, VOICELESS_CONSONANTS_NAME } from '../common/Letter'\r\nimport AffixItem from '../common/AffixItem'\r\nimport WordAffix from '../common/WordAffix'\r\nimport CommonTable from './CommonTable'\r\n\r\nconst GenitiveTable = (): JSX.Element => {\r\n  return (\r\n    <CommonTable title={'№5 Образование родительного падежа'}>\r\n      <table>\r\n        <thead>\r\n        <tr>\r\n          <td colSpan={2}>Последняя гласная буква корня</td>\r\n          <td>Последняя буква корня</td>\r\n          <td>Аффикс</td>\r\n          <td>Пример</td>\r\n          <td>Перевод</td>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n          <td rowSpan={3} colSpan={2}>а, я, ы</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'нын'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'музык'} affix={<Letter value={'а'}/>}/> - <WordAffix root={'музыка'} affix={'нын'}/>\r\n          </td>\r\n          <td>\r\n            музыка - музыки\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дын'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'кы'} affix={<Letter value={'з'}/>}/> - <WordAffix root={'кыз'} affix={'дын'}/>\r\n          </td>\r\n          <td>\r\n            дочь - дочери\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тын'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'вра'} affix={<Letter value={'ч'}/>}/> - <WordAffix root={'врач'} affix={'тын'}/>\r\n          </td>\r\n          <td>\r\n            врач - врача\r\n          </td>\r\n        </tr>\r\n        {/* ================================================================================================ */}\r\n        <tr>\r\n          <td rowSpan={3} colSpan={2}>э, е, и</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'нин'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'кем'} affix={<Letter value={'е'}/>}/> - <WordAffix root={'кеме'} affix={'нин'}/>\r\n          </td>\r\n          <td>\r\n            корабль - корабля\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дин'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'мунали'} affix={<Letter value={'м'}/>}/> - <WordAffix root={'мугалим'} affix={'дин'}/>\r\n          </td>\r\n          <td>\r\n            учитель - учителя\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тин'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'планше'} affix={<Letter value={'т'}/>}/> - <WordAffix root={'планшет'} affix={'тин'}/>\r\n          </td>\r\n          <td>\r\n            планшет - планшета\r\n          </td>\r\n        </tr>\r\n        {/* ================================================================================================ */}\r\n        <tr>\r\n          <td rowSpan={3} colSpan={2}>ө, ү</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'нүн'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'өлк'} affix={<Letter value={'ө'}/>}/> - <WordAffix root={'өлкө'} affix={'нүн'}/>\r\n          </td>\r\n          <td>\r\n            страна - страны\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дүн'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'кө'} affix={<Letter value={'л'}/>}/> - <WordAffix root={'көл'} affix={'дүн'}/>\r\n          </td>\r\n          <td>\r\n            озеро - озера\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'түн'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'сөздү'} affix={<Letter value={'к'}/>}/> - <WordAffix root={'сөздөк'} affix={'түн'}/>\r\n          </td>\r\n          <td>\r\n            словарь - словаря\r\n          </td>\r\n        </tr>\r\n        {/* ================================================================================================ */}\r\n        <tr>\r\n          <td rowSpan={3} colSpan={2}>о, ё, у, ю</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'нун'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'окууч'} affix={<Letter value={'у'}/>}/> - <WordAffix root={'окуучу'} affix={'нун'}/>\r\n          </td>\r\n          <td>\r\n            ученик - ученика\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дун'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'телефо'} affix={<Letter value={'н'}/>}/> - <WordAffix root={'телефон'} affix={'дун'}/>\r\n          </td>\r\n          <td>\r\n            телефон - телефона\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тун'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'автобу'} affix={<Letter value={'с'}/>}/> - <WordAffix root={'автобус'} affix={'тун'}/>\r\n          </td>\r\n          <td>\r\n            автобус - автобуса\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n    </CommonTable>\r\n  )\r\n}\r\n\r\nexport default GenitiveTable\r\n","/**\r\n * Компонент аффикса\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\n\r\ninterface AffixItemProps {\r\n  value: string\r\n}\r\n\r\nconst AffixItem = (props: AffixItemProps): JSX.Element => {\r\n  const { value } = props\r\n  return (\r\n    <span style={{ color: 'orangered' }}>\r\n      <b>-{value}</b>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AffixItem\r\n","/**\r\n * Компонент буквы\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\nimport { Tooltip } from 'antd'\r\n\r\n/**\r\n * Гласные\r\n */\r\nexport const VOWELS_NAME: string = 'Гласная'\r\nexport const VOWELS: string[] = ['а', 'е', 'ё', 'и', 'о', 'ө', 'у', 'ү', 'ы', 'э', 'ю', 'я']\r\n\r\n/**\r\n * Звонкие согласные\r\n */\r\nexport const VOICED_CONSONANTS_NAME: string = 'Звонкая согласная'\r\nexport const VOICED_CONSONANTS: string[] = ['б', 'в', 'г', 'д', 'ж', 'з', 'л', 'м', 'н', 'ң', 'р', 'й']\r\n\r\n/**\r\n * Глухие согласные\r\n */\r\nexport const VOICELESS_CONSONANTS_NAME: string = 'Глухая согласная'\r\nexport const VOICELESS_CONSONANTS: string[] = ['п', 'ф', 'к', 'т', 'ш', 'с', 'х', 'ч', 'щ', 'ц']\r\n\r\ninterface LetterProps {\r\n  value: string\r\n  bold?: boolean\r\n  underline?: boolean\r\n}\r\n\r\nconst Letter = (props: LetterProps): JSX.Element => {\r\n  const { value, bold = false, underline = false } = props\r\n\r\n  const getTooltip = (): string => {\r\n    if (VOWELS.includes(value)) {\r\n      return VOWELS_NAME\r\n    }\r\n\r\n    if (VOICED_CONSONANTS.includes(value)) {\r\n      return VOICED_CONSONANTS_NAME\r\n    }\r\n\r\n    if (VOICELESS_CONSONANTS.includes(value)) {\r\n      return VOICELESS_CONSONANTS_NAME\r\n    }\r\n\r\n    return 'Неизвестный тип буквы'\r\n  }\r\n\r\n  const getColor = (): string => {\r\n    if (VOWELS.includes(value)) {\r\n      return 'red'\r\n    }\r\n\r\n    if (VOICED_CONSONANTS.includes(value)) {\r\n      return 'green'\r\n    }\r\n\r\n    if (VOICELESS_CONSONANTS.includes(value)) {\r\n      return 'blue'\r\n    }\r\n\r\n    return 'black'\r\n  }\r\n\r\n  const getBold = (): 'bold' | undefined => {\r\n    return bold ? 'bold' : undefined\r\n  }\r\n\r\n  const getUnderline = (): 'underline' | undefined => {\r\n    return underline ? 'underline' : undefined\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={getTooltip()}>\r\n    <span style={{ cursor: 'pointer', color: getColor(), fontWeight: getBold(), textDecoration: getUnderline() }}>\r\n      {value}\r\n    </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default Letter\r\n","/**\r\n * Компонент c буквами\r\n *\r\n * @author Markitanov Vadim\r\n * @since 26.05.2023\r\n */\r\nimport React from 'react'\r\nimport { Space } from 'antd'\r\nimport Letter, { VOWELS, VOICED_CONSONANTS, VOICELESS_CONSONANTS } from './Letter'\r\n\r\nconst LettersPanel = (): JSX.Element => {\r\n  return (\r\n    <Space size={1} direction={'vertical'}>\r\n      <Space>\r\n        <span>Краткие гласные:</span> {VOWELS.map(value => (<Letter key={value} value={value} bold/>))}\r\n      </Space>\r\n      <Space>\r\n        <span>Звонкие согласные:</span>{VOICED_CONSONANTS.map(value => (<Letter key={value} value={value} bold/>))}\r\n      </Space>\r\n      <Space>\r\n        <span>Глухие согласные:</span> {VOICELESS_CONSONANTS.map(value => (<Letter key={value} value={value} bold/>))}\r\n      </Space>\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default LettersPanel\r\n","/**\r\n * Компонент выделения аффиксов у слова\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\nimport Letter from './Letter'\r\n\r\ninterface WordAffixProps {\r\n  root: string | JSX.Element\r\n  affix: string | JSX.Element\r\n}\r\n\r\nconst WordAffix = (props: WordAffixProps): JSX.Element => {\r\n  const { root, affix } = props\r\n  if (React.isValidElement(affix)) {\r\n    const letter = affix as JSX.Element\r\n    return <>\r\n      {root}<Letter value={letter.props.value as string} bold={true} underline={true}/>\r\n    </>\r\n  } else {\r\n    return (\r\n      <>\r\n        {root}<b><u>{affix as string}</u></b>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WordAffix\r\n"],"names":["props","title","children","_jsxs","_Fragment","_jsx","Space","direction","LettersPanel","CommonTable","colSpan","rowSpan","VOWELS_NAME","AffixItem","value","WordAffix","root","affix","Letter","VOICED_CONSONANTS_NAME","VOICELESS_CONSONANTS_NAME","style","color","VOWELS","VOICED_CONSONANTS","VOICELESS_CONSONANTS","_props$bold","bold","_props$underline","underline","Tooltip","includes","cursor","fontWeight","undefined","textDecoration","size","React","letter"],"sourceRoot":""}