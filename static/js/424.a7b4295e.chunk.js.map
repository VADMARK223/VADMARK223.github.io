{"version":3,"file":"static/js/424.a7b4295e.chunk.js","mappings":"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","sources":["components/others/hymn/eventManager.ts","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","components/others/hymn/HymnLine.tsx","components/others/hymn/HymnWord.tsx","../node_modules/antd/es/skeleton/Element.js","../node_modules/antd/es/skeleton/style/index.js","../node_modules/antd/es/skeleton/Avatar.js","../node_modules/antd/es/skeleton/Button.js","../node_modules/@ant-design/icons-svg/es/asn/DotChartOutlined.js","../node_modules/@ant-design/icons/es/icons/DotChartOutlined.js","../node_modules/antd/es/skeleton/Node.js","../node_modules/antd/es/skeleton/Image.js","../node_modules/antd/es/skeleton/Input.js","../node_modules/antd/es/skeleton/Paragraph.js","../node_modules/antd/es/skeleton/Title.js","../node_modules/antd/es/skeleton/Skeleton.js","../node_modules/antd/es/skeleton/index.js","components/others/hymn/Hymn.tsx"],"sourcesContent":["/**\r\n * @author Markitanov Vadim\r\n * @since 06.08.2023\r\n */\r\n\r\nexport const enum Event {\r\n  Highlight, // Подсветить\r\n  Clear// Сбросить подсветку\r\n}\r\n\r\nexport interface EventData {\r\n  ru: string // Ключ на русском\r\n  ruMode: boolean // На какое слово навели, русское или кыргызское\r\n}\r\n\r\ntype OnShowCallback = (data: EventData) => void\r\ntype OnHideCallback = (data: EventData) => void\r\n\r\ntype Callback = OnShowCallback | OnHideCallback\r\n\r\ninterface EventManager {\r\n  list: Map<Event, Callback[]>\r\n  on: (event: Event, callback: Callback) => void\r\n  emit: (event: Event, data: EventData) => void\r\n}\r\n\r\nexport const eventManager: EventManager = {\r\n  list: new Map<Event, Callback[]>(),\r\n\r\n  on (event: Event, callback: Callback) {\r\n    if (this.list.get(event) === undefined) {\r\n      this.list.set(event, [])\r\n    }\r\n    this.list.get(event)?.push(callback)\r\n  },\r\n\r\n  emit (event: Event, data: EventData) {\r\n    const callbacks = this.list.get(event)\r\n    if (callbacks !== undefined) {\r\n      callbacks.forEach(callback => {\r\n        callback(data)\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","/**\r\n * Компонент\r\n *\r\n * @author Markitanov Vadim\r\n * @since 03.08.2023\r\n */\r\nimport React from 'react'\r\nimport { Col, Row } from 'antd'\r\n\r\ninterface HymnLineProps {\r\n  first: JSX.Element | string\r\n  second: JSX.Element | string\r\n  third: JSX.Element | string\r\n}\r\n\r\nconst HymnLine = (props: HymnLineProps): JSX.Element => {\r\n  const { first, second, third } = props\r\n  return (\r\n    <Row>\r\n      <Col span={8}>{first}</Col>\r\n      <Col span={8}>{second}</Col>\r\n      <Col span={8}>{third}</Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default HymnLine\r\n","/**\r\n * Компонент\r\n *\r\n * @author Markitanov Vadim\r\n * @since 03.08.2023\r\n */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { WordDto } from '../../../models/dto/WordDto'\r\nimport { DicDto } from '../../../models/dto/DicDto'\r\nimport { useAppSelector } from '../../../store/hooks'\r\nimport { Popover } from 'antd'\r\nimport { eventManager, Event, EventData } from './eventManager'\r\n\r\ninterface HymnWordProps {\r\n  ru: string // Русский ключ для поиска в словаре\r\n  kgMode?: boolean // Русское текущее слово или кыргызское\r\n  display: string // Как слово должно отображаться в тексте\r\n}\r\n\r\nconst HymnWord = (props: HymnWordProps): JSX.Element => {\r\n  const { ru, kgMode = false, display } = props\r\n  const ruMode = !kgMode\r\n  const dic: DicDto = useAppSelector(state => state.dic)\r\n  const [highlight, setHighlight] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    eventManager.on(Event.Highlight, (data: EventData) => {\r\n      if (data.ru === ru && data.ruMode !== ruMode) {\r\n        setHighlight(true)\r\n      }\r\n    })\r\n\r\n    eventManager.on(Event.Clear, (data: EventData) => {\r\n      if (data.ru === ru && data.ruMode !== ruMode) {\r\n        setHighlight(false)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const foundWords: WordDto[] = dic.words.filter(word => word.ru.toLowerCase() === ru.toLowerCase())\r\n\r\n  let translate: undefined | string\r\n  if (foundWords.length !== 0) {\r\n    if (ruMode) {\r\n      translate = foundWords[0].ru\r\n    } else {\r\n      translate = foundWords[0].kg\r\n    }\r\n  }\r\n\r\n  const errorMessage: string = `Слово не найдено \"${ru}\"`\r\n\r\n  const tooltip = (): JSX.Element => {\r\n    if (foundWords.length === 0) {\r\n      return (<>{errorMessage}</>)\r\n    }\r\n\r\n    const ruWord: string = foundWords[0].ru\r\n    const kgWord: string = foundWords.length === 1 ? foundWords[0].kg : foundWords.map(value => value.kg).join(', ')\r\n\r\n    if (ruMode) {\r\n      return (<>{ruWord} - {kgWord}</>)\r\n    } else {\r\n      return (<>{kgWord} - {ruWord}</>)\r\n    }\r\n  }\r\n\r\n  const style: React.CSSProperties = {\r\n    cursor: 'pointer',\r\n    color: foundWords.length === 0 ? 'red' : highlight ? 'red' : 'green'\r\n  }\r\n\r\n  const Text = (): JSX.Element => {\r\n    if (display !== undefined) {\r\n      return (<u>{display}</u>)\r\n    }\r\n\r\n    if (translate === undefined) {\r\n      return (<u>{errorMessage}</u>)\r\n    }\r\n\r\n    return (<u>{translate.toLowerCase()}</u>)\r\n  }\r\n\r\n  const handlerStartAction = (): void => {\r\n    eventManager.emit(Event.Highlight, { ru, ruMode })\r\n  }\r\n\r\n  const handlerMouseLeave = (): void => {\r\n    eventManager.emit(Event.Clear, { ru, ruMode })\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      content={tooltip}\r\n    >\r\n        <span style={style}\r\n              onMouseEnter={handlerStartAction}\r\n              onMouseLeave={handlerMouseLeave}\r\n        >\r\n          <Text/>\r\n        </span>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nexport default HymnWord\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nconst Element = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    size,\n    shape\n  } = props;\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small'\n  });\n  const shapeCls = classNames({\n    [`${prefixCls}-circle`]: shape === 'circle',\n    [`${prefixCls}-square`]: shape === 'square',\n    [`${prefixCls}-round`]: shape === 'round'\n  });\n  const sizeStyle = React.useMemo(() => typeof size === 'number' ? {\n    width: size,\n    height: size,\n    lineHeight: `${size}px`\n  } : {}, [size]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(prefixCls, sizeCls, shapeCls, className),\n    style: Object.assign(Object.assign({}, sizeStyle), style)\n  });\n};\nexport default Element;","import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: `${size}px`\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = size => Object.assign({\n  width: size * 5,\n  minWidth: size * 5\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    color,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [`${skeletonAvatarCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    color\n  } = token;\n  return {\n    [`${skeletonInputCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    color,\n    borderRadiusSM\n  } = token;\n  return {\n    [`${skeletonImageCls}`]: Object.assign(Object.assign({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(imageSizeBase * 2)), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: imageSizeBase * 4,\n        maxHeight: imageSizeBase * 4\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = size => Object.assign({\n  width: size * 2,\n  minWidth: size * 2\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    color\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [`${skeletonButtonCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: color,\n      borderRadius: borderRadiusSM,\n      width: controlHeight * 2,\n      minWidth: controlHeight * 2\n    }, genSkeletonElementButtonSize(controlHeight))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    color,\n    padding,\n    marginSM,\n    borderRadius,\n    skeletonTitleHeight,\n    skeletonBlockRadius,\n    skeletonParagraphLineHeight,\n    controlHeightXS,\n    skeletonParagraphMarginTop\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [`${skeletonAvatarCls}`]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: color\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [`${skeletonTitleCls}`]: {\n          width: '100%',\n          height: skeletonTitleHeight,\n          background: color,\n          borderRadius: skeletonBlockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [`${skeletonParagraphCls}`]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: skeletonParagraphLineHeight,\n            listStyle: 'none',\n            background: color,\n            borderRadius: skeletonBlockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [`${skeletonTitleCls}`]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: skeletonParagraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [`${skeletonButtonCls}`]: {\n        width: '100%'\n      },\n      [`${skeletonInputCls}`]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Skeleton', token => {\n  const {\n    componentCls\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: token.controlHeight * 1.5,\n    skeletonTitleHeight: token.controlHeight / 2,\n    skeletonBlockRadius: token.borderRadiusSM,\n    skeletonParagraphLineHeight: token.controlHeight / 2,\n    skeletonParagraphMarginTop: token.marginLG + token.marginXXS,\n    borderRadius: 100,\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.color} 25%, ${token.colorGradientEnd} 37%, ${token.color} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  return {\n    color: colorFillContent,\n    colorGradientEnd: colorFill\n  };\n});","import classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonAvatar = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    shape = 'circle',\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls', 'className']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-avatar`,\n    shape: shape,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonAvatar;","import classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonButton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block = false,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-button`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonButton;","// This icon file is generated automatically.\nvar DotChartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM288 604a64 64 0 10128 0 64 64 0 10-128 0zm118-224a48 48 0 1096 0 48 48 0 10-96 0zm158 228a96 96 0 10192 0 96 96 0 10-192 0zm148-314a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"dot-chart\", \"theme\": \"outlined\" };\nexport default DotChartOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DotChartOutlinedSvg from \"@ant-design/icons-svg/es/asn/DotChartOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DotChartOutlined = function DotChartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DotChartOutlinedSvg\n  }));\n};\nDotChartOutlined.displayName = 'DotChartOutlined';\nexport default /*#__PURE__*/React.forwardRef(DotChartOutlined);","import DotChartOutlined from \"@ant-design/icons/es/icons/DotChartOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst SkeletonNode = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active,\n    children\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, hashId, className, rootClassName);\n  const content = children !== null && children !== void 0 ? children : /*#__PURE__*/React.createElement(DotChartOutlined, null);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, content)));\n};\nexport default SkeletonNode;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst path = 'M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z';\nconst SkeletonImage = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    active\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-image`, className),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 1098 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: `${prefixCls}-image-svg`\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: path,\n    className: `${prefixCls}-image-path`\n  })))));\n};\nexport default SkeletonImage;","import classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonInput = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-input`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonInput;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Paragraph = props => {\n  const getWidth = index => {\n    const {\n      width,\n      rows = 2\n    } = props;\n    if (Array.isArray(width)) {\n      return width[index];\n    }\n    // last paragraph\n    if (rows - 1 === index) {\n      return width;\n    }\n    return undefined;\n  };\n  const {\n    prefixCls,\n    className,\n    style,\n    rows\n  } = props;\n  const rowList = _toConsumableArray(Array(rows)).map((_, index) =>\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-array-index-key\n  React.createElement(\"li\", {\n    key: index,\n    style: {\n      width: getWidth(index)\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;","/* eslint-disable jsx-a11y/heading-has-content */\nimport classNames from 'classnames';\nimport * as React from 'react';\nconst Title = _ref => {\n  let {\n    prefixCls,\n    className,\n    width,\n    style\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    className: classNames(prefixCls, className),\n    style: Object.assign({\n      width\n    }, style)\n  });\n};\nexport default Title;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonNode from './Node';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  const basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nconst Skeleton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    loading,\n    className,\n    rootClassName,\n    style,\n    children,\n    avatar = false,\n    title = true,\n    paragraph = true,\n    active,\n    round\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  if (loading || !('loading' in props)) {\n    const hasAvatar = !!avatar;\n    const hasTitle = !!title;\n    const hasParagraph = !!paragraph;\n    // Avatar\n    let avatarNode;\n    if (hasAvatar) {\n      const avatarProps = Object.assign(Object.assign({\n        prefixCls: `${prefixCls}-avatar`\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-header`\n      }, /*#__PURE__*/React.createElement(Element, Object.assign({}, avatarProps)));\n    }\n    let contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      let $title;\n      if (hasTitle) {\n        const titleProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-title`\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, Object.assign({}, titleProps));\n      }\n      // Paragraph\n      let paragraphNode;\n      if (hasParagraph) {\n        const paragraphProps = Object.assign(Object.assign({\n          prefixCls: `${prefixCls}-paragraph`\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, Object.assign({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-content`\n      }, $title, paragraphNode);\n    }\n    const cls = classNames(prefixCls, {\n      [`${prefixCls}-with-avatar`]: hasAvatar,\n      [`${prefixCls}-active`]: active,\n      [`${prefixCls}-rtl`]: direction === 'rtl',\n      [`${prefixCls}-round`]: round\n    }, className, rootClassName, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode));\n  }\n  return typeof children !== 'undefined' ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nif (process.env.NODE_ENV !== 'production') {\n  Skeleton.displayName = 'Skeleton';\n}\nexport default Skeleton;","import Skeleton from './Skeleton';\nexport default Skeleton;","/**\r\n * Компонент гимна Кыргызского языка\r\n *\r\n * @author Markitanov Vadim\r\n * @since 03.08.2023\r\n */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks'\r\nimport { fetchDic } from '../../../api/dictionary'\r\nimport HymnLine from './HymnLine'\r\nimport HymnWord from './HymnWord'\r\nimport { ADMIN_MODE } from '../../../api/common'\r\nimport { getDic } from '../../../store/dicSlice'\r\nimport data from '../../../assets/dictionary.json'\r\nimport { DicDto } from '../../../models/dto/DicDto'\r\nimport { Skeleton } from 'antd'\r\nimport InfoIcon from '../../common/InfoIcon'\r\n\r\nconst Hymn = (): JSX.Element => {\r\n  const dispatch = useAppDispatch()\r\n  const dic: DicDto = useAppSelector(state => state.dic)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (ADMIN_MODE) {\r\n      fetchDic(dispatch)\r\n    } else {\r\n      dispatch(getDic(data as DicDto))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (dic.words.length > 0) {\r\n      setLoading(false)\r\n    }\r\n  }, [dic.words])\r\n\r\n  const Chorus = (): JSX.Element => (\r\n    <>\r\n      <HymnLine first={<span><HymnWord ru={'припев'} display={'Кайырма:'} kgMode/></span>}\r\n                second={<span><HymnWord ru={'припев'} display={'Припев:'}/></span>}\r\n                third={<span><HymnWord ru={'припев'} display={'Припев:'}/></span>}\r\n      />\r\n\r\n      <HymnLine first={<span><HymnWord ru={'двигаться вперёд'} kgMode display={'Алгала'}/>й <HymnWord ru={'давать'} kgMode display={'бер'}/>, кыргыз <HymnWord ru={'народ'} kgMode display={'эл'}/>,</span>}\r\n                second={<span><HymnWord ru={'двигаться вперёд'} display={'Вперёд'}/> кыргызский <HymnWord ru={'народ'} display={'народ'}/>,</span>}\r\n                third={<span><HymnWord ru={'двигаться вперёд'} display={'Вперёд'}/> кыргызский <HymnWord ru={'народ'} display={'народ'}/>,</span>}\r\n      />\r\n\r\n      <HymnLine first={<span><HymnWord ru={'свобода'} kgMode display={'Азаттык'}/>тын <HymnWord ru={'путь'} kgMode display={'жол'}/>унда,</span>}\r\n                second={<span><HymnWord ru={'путь'} display={'Путем'}/> <HymnWord ru={'свобода'} display={'свободы'}/>, вперёд!</span>}\r\n                third={<span>В <HymnWord ru={'путь'} display={'путь'}/> к <HymnWord ru={'свобода'} display={'свободе'}/>,</span>}\r\n      />\r\n\r\n      <HymnLine first={<span><HymnWord ru={'развиваться, прогрессировать'} kgMode display={'Өркүндө'}/>й <HymnWord ru={'давать'} kgMode display={'бер'}/>, өсө <HymnWord ru={'давать'} kgMode display={'бер'}/>,</span>}\r\n                second={<span>Взрастай народ, расцветай,</span>}\r\n                third={<span>Продолжай <HymnWord ru={'развиваться, прогрессировать'} display={'прогрессировать'}/>, продолжай процветать,</span>}\r\n      />\r\n\r\n      <HymnLine first={<span><HymnWord ru={'свой'} kgMode display={'Өз'}/> <HymnWord ru={'судьба'} kgMode display={'тагдыр'}/>ың <HymnWord ru={'рука'} kgMode display={'кол'}/>унда.</span>}\r\n                second={<span><HymnWord ru={'свой'} display={'Свою'}/> <HymnWord ru={'судьба'} display={'судьбу'}/> созидай!</span>}\r\n                third={<span>Ваша <HymnWord ru={'судьба'} display={'судьба'}/> в ваших <HymnWord ru={'рука'} display={'руках'}/>.</span>}\r\n      />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <h1> Гимн Кыргызстана <InfoIcon tooltip={'Гимн утверждён постановлением Верховного Совета Республики Кыргызстан от 18 декабря 1992 года.'}/></h1>\r\n      <HymnLine first={<h3> Кыргызский <InfoIcon tooltip={'Слова: Ж.Садыкова, Ш.Кулуева Музыка: Н.Давлесова, К.Молдобасанова'}/></h3>}\r\n                second={<h3> Русский (официальный) <InfoIcon tooltip={'К.Акматов и М.А.Рудов'}/></h3>}\r\n                third={<h3> Русский (моя интерпретация) <InfoIcon tooltip={'В.В.Маркитанов =)'}/></h3>}\r\n      />\r\n\r\n      <Skeleton loading={loading} active>\r\n        <HymnLine first={<span><HymnWord ru={'белый'} kgMode display={'Ак'}/> <HymnWord ru={'горный ледник'} kgMode display={'мөңгү'}/>лүү <HymnWord ru={'неприступная высокая скалистая гора'} kgMode display={'аска'}/> <HymnWord ru={'скала'} kgMode display={'зоо'}/>лор, <HymnWord ru={'поле'} kgMode\r\n                                                                                                                                                                                                                                                                                        display={'талаа'}/>лар,</span>}\r\n                  second={<span><HymnWord ru={'неприступная высокая скалистая гора'} display={'Высокие горы'}/>, долины, <HymnWord ru={'поле'} display={'поля'}/> - </span>}\r\n                  third={<span><HymnWord ru={'белый'} display={'Белые'}/> <HymnWord ru={'горный ледник'} display={'горные ледники'}/>, <HymnWord ru={'неприступная высокая скалистая гора'} display={'высокие'}/> <HymnWord ru={'скала'} display={'скалы'}/>, <HymnWord ru={'поле'}\r\n                                                                                                                                                                                                                                                                        display={'поля'}/>,</span>}\r\n        />\r\n        <HymnLine first={<span><HymnWord ru={'народ'} kgMode display={'Эл'}/>ибиздин <HymnWord ru={'душа'} kgMode display={'жан'}/>ы менен <HymnWord ru={'равно'} kgMode display={'барабар'}/>.</span>}\r\n                  second={<span>Родная, заветная наша земля.</span>}\r\n                  third={<span><HymnWord ru={'равно'} display={'Равные'}/> <HymnWord ru={'душа'} display={'душам'}/> нашего <HymnWord ru={'народ'} display={'народа'}/>.</span>}\r\n        />\r\n\r\n        <HymnLine first={<span><HymnWord ru={'численность'} kgMode display={'Сан'}/>сыз <HymnWord ru={'век'} kgMode display={'кылым'}/> Ала-Тоосун <HymnWord ru={'обитать, иметь место жительства: обитать где-л.'} kgMode display={'мекенде'}/>п,</span>}\r\n                  second={<span>Отцы наши <HymnWord ru={'обитать, иметь место жительства: обитать где-л.'} display={'жили'}/> среди Ала-Тоо,</span>}\r\n                  third={<span><HymnWord ru={'обитать, иметь место жительства: обитать где-л.'} display={'Жили'}/> в Ала-Тоо <HymnWord ru={'численность'} display={'бесчисленные'}/> <HymnWord ru={'век'} display={'века'}/>,</span>}\r\n        />\r\n\r\n        <HymnLine first={<span><HymnWord ru={'хранить, оберегать, беречь'} kgMode display={'Сакта'}/>п келди биздин <HymnWord ru={'предки, отцы и деды'} kgMode display={'ата-бабалар'}/>.</span>}\r\n                  second={<span>Всегда свою Родину свято <HymnWord ru={'хранить, оберегать, беречь'} display={'храня'}/>.</span>}\r\n                  third={<span>Наши <HymnWord ru={'предки, отцы и деды'} display={'предки'}/> <HymnWord ru={'хранить, оберегать, беречь'} display={'хранили'}/> нас.</span>}\r\n        />\r\n\r\n        <br/>\r\n        <Chorus/>\r\n        <br/>\r\n\r\n        <HymnLine first={<span>Аткарылып элдин умут, тилеги,</span>}\r\n                  second={<span>Мечты и надежды отцов сбылись.</span>}\r\n                  third={<span>Наши надежды и стремления выполнены.</span>}\r\n        />\r\n\r\n        <HymnLine first={<span><HymnWord ru={'развеваться'} kgMode display={'Желбире'}/>ди <HymnWord ru={'свобода'} kgMode display={'эркиндик'}/>тин <HymnWord ru={'флаг'} kgMode display={'желег'}/>и.</span>}\r\n                  second={<span>И <HymnWord ru={'флаг'} display={'знамя'}/> <HymnWord ru={'свобода'} display={'свободы'}/> <HymnWord ru={'развеваться'} display={'возносится'}/> ввысь.</span>}\r\n                  third={<span>Наши люди <HymnWord ru={'развеваться'} display={'размахивают'}/> <HymnWord ru={'флаг'} display={'флагом'}/> <HymnWord ru={'свобода'} display={'свободы'}/>.</span>}\r\n        />\r\n\r\n        <HymnLine first={<span>Бизге жеткен ата салтын, мурасын,</span>}\r\n                  second={<span>Наследие отцов наших передадим</span>}\r\n                  third={<span>Традиции наших отцов дошли к нас в целости.</span>}\r\n        />\r\n\r\n        <HymnLine first={<span><HymnWord ru={'святой'} kgMode display={'Ыйык'}/> <HymnWord ru={'хранить, оберегать, беречь'} kgMode display={'сакта'}/>п урпактарга берели.</span>}\r\n                  second={<span>На благо народа потомкам своим.</span>}\r\n                  third={<span>Пусть поколения <HymnWord ru={'хранить, оберегать, беречь'} display={'сохранят'}/> наше <HymnWord ru={'святой'} display={'святое'}/> наследие.</span>}\r\n        />\r\n\r\n        <br/>\r\n\r\n        <Chorus/>\r\n      </Skeleton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hymn\r\n"],"names":["Event","props","first","second","third","_jsxs","Row","children","_jsx","Col","span","eventManager","list","Map","on","event","callback","_this$list$get","undefined","this","get","set","push","emit","data","callbacks","forEach","ru","_props$kgMode","kgMode","display","ruMode","dic","useAppSelector","state","_useState","useState","_useState2","_slicedToArray","highlight","setHighlight","useEffect","Highlight","Clear","translate","foundWords","words","filter","word","toLowerCase","length","kg","errorMessage","concat","style","cursor","color","Text","Popover","content","_Fragment","ruWord","kgWord","map","value","join","onMouseEnter","onMouseLeave","_classNames","_classNames2","prefixCls","className","size","shape","sizeCls","classNames","_defineProperty","shapeCls","sizeStyle","React","width","height","lineHeight","Object","assign","skeletonClsLoading","Keyframes","backgroundPosition","genSkeletonElementCommonSize","genSkeletonElementAvatarSize","genSkeletonElementInputSize","minWidth","genSkeletonElementImageSize","genSkeletonElementButtonShape","token","buttonCls","_ref4","skeletonButtonCls","borderRadius","genSkeletonElementButtonSize","genBaseStyle","_$concat","_$concat3","_$concat4","_$concat$concat2","_ref5","componentCls","skeletonAvatarCls","skeletonTitleCls","skeletonParagraphCls","skeletonInputCls","skeletonImageCls","controlHeight","controlHeightLG","controlHeightSM","padding","marginSM","skeletonTitleHeight","skeletonBlockRadius","skeletonParagraphLineHeight","controlHeightXS","skeletonParagraphMarginTop","paddingInlineEnd","verticalAlign","background","marginBlockStart","listStyle","borderRadiusSM","genSkeletonElementButton","_ref","genSkeletonElementAvatar","_ref2","genSkeletonElementInput","_Object$assign","_ref3","imageSizeBase","alignItems","justifyContent","fill","maxWidth","maxHeight","genSkeletonElementImage","skeletonLoadingBackground","backgroundSize","animationName","animationDuration","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","genSkeletonColor","genComponentStyleHook","skeletonToken","mergeToken","marginLG","marginXXS","colorGradientEnd","colorFillContent","colorFill","customizePrefixCls","rootClassName","active","_props$shape","_props$size","getPrefixCls","ConfigContext","_useStyle","useStyle","_useStyle2","wrapSSR","hashId","otherProps","omit","cls","Element","_props$block","block","DotChartOutlined","ref","AntdIcon","_objectSpread","icon","DotChartOutlinedSvg","displayName","viewBox","xmlns","d","getWidth","index","_props$rows","rows","Array","isArray","rowList","_toConsumableArray","_","key","getComponentProps","prop","Skeleton","loading","_props$avatar","avatar","_props$title","title","_props$paragraph","paragraph","round","_React$useContext","direction","avatarNode","contentNode","hasAvatar","hasTitle","hasParagraph","avatarProps","getAvatarBasicProps","$title","paragraphNode","titleProps","getTitleBasicProps","Title","paragraphProps","basicProps","getParagraphBasicProps","Paragraph","Button","SkeletonButton","Avatar","SkeletonAvatar","Input","SkeletonInput","Image","SkeletonImage","Node","SkeletonNode","dispatch","useAppDispatch","setLoading","ADMIN_MODE","fetchDic","getDic","Chorus","HymnLine","HymnWord","InfoIcon","tooltip"],"sourceRoot":""}