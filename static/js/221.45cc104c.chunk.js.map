{"version":3,"file":"static/js/221.45cc104c.chunk.js","mappings":"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","sources":["components/affixes/multiAffix/MultiAffix.tsx","components/affixes/questionAffix/QuestionAffix.tsx","components/affixes/Affixes.tsx","components/common/PhraseItem.tsx"],"sourcesContent":["/**\r\n * Компонент множественных аффиксов\r\n *\r\n * @author Markitanov Vadim\r\n * @since 15.05.2023\r\n */\r\nimport React from 'react'\r\nimport ReactFlow, { MarkerType, MiniMap, Controls } from 'reactflow'\r\nimport 'reactflow/dist/style.css'\r\n\r\nconst SECOND_Y = 100\r\nconst THIRD_Y = 200\r\nconst NODE_WIDTH = 70\r\nconst MAX_NODE_COUNT = 8\r\nconst GAP = 50\r\nconst TOTAL_WIDTH = (NODE_WIDTH + GAP) * MAX_NODE_COUNT - GAP\r\n\r\nconst TOP_WIDTH = 200\r\nconst MIDDLE_WIDTH = 2 * NODE_WIDTH + GAP\r\nconst MIDDLE_COLOR = 'green'\r\n\r\nconst S_G = 'Согл(гл)'\r\nconst S_Z = 'Согл(зв)'\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: 'root',\r\n    position: { x: (TOTAL_WIDTH - TOP_WIDTH) * 0.5, y: 0 },\r\n    data: { label: 'Последняя гласная буква' },\r\n    type: 'input',\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: 'gray', color: 'white', width: TOP_WIDTH }\r\n  },\r\n\r\n  {\r\n    id: 'last_word_0',\r\n    position: { x: 0, y: SECOND_Y },\r\n    data: { label: 'Последняя буква корня' },\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: MIDDLE_COLOR, color: 'white', width: MIDDLE_WIDTH }\r\n  },\r\n  {\r\n    id: 'last_word_1',\r\n    position: { x: MIDDLE_WIDTH + GAP, y: SECOND_Y },\r\n    data: { label: 'Последняя буква корня' },\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: MIDDLE_COLOR, color: 'white', width: MIDDLE_WIDTH }\r\n  },\r\n  {\r\n    id: 'last_word_2',\r\n    position: { x: (MIDDLE_WIDTH + GAP) * 2, y: SECOND_Y },\r\n    data: { label: 'Последняя буква корня' },\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: MIDDLE_COLOR, color: 'white', width: MIDDLE_WIDTH }\r\n  },\r\n  {\r\n    id: 'last_word_3',\r\n    position: { x: (MIDDLE_WIDTH + GAP) * 3, y: SECOND_Y },\r\n    data: { label: 'Последняя буква корня' },\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: MIDDLE_COLOR, color: 'white', width: MIDDLE_WIDTH }\r\n  },\r\n\r\n  {\r\n    id: 'affix_0',\r\n    position: { x: 0, y: THIRD_Y },\r\n    data: { label: '-бы' },\r\n    type: 'output',\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: '#63B3ED', color: 'white', width: NODE_WIDTH }\r\n  },\r\n  {\r\n    id: 'affix_1',\r\n    position: { x: NODE_WIDTH + GAP, y: THIRD_Y },\r\n    data: { label: '-пы' },\r\n    type: 'output',\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: '#63B3ED', color: 'white', width: NODE_WIDTH }\r\n  },\r\n  {\r\n    id: 'affix_2',\r\n    position: { x: (NODE_WIDTH + GAP) * 2, y: THIRD_Y },\r\n    data: { label: '-би' },\r\n    type: 'output',\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: '#63B3ED', color: 'white', width: NODE_WIDTH }\r\n  },\r\n  {\r\n    id: 'affix_3',\r\n    position: { x: (NODE_WIDTH + GAP) * 3, y: THIRD_Y },\r\n    data: { label: '-пи' },\r\n    type: 'output',\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: '#63B3ED', color: 'white', width: NODE_WIDTH }\r\n  },\r\n  {\r\n    id: 'affix_4',\r\n    position: { x: (NODE_WIDTH + GAP) * 4, y: THIRD_Y },\r\n    data: { label: '-бү' },\r\n    type: 'output',\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: '#63B3ED', color: 'white', width: NODE_WIDTH }\r\n  },\r\n  {\r\n    id: 'affix_5',\r\n    position: { x: (NODE_WIDTH + GAP) * 5, y: THIRD_Y },\r\n    data: { label: '-пү' },\r\n    type: 'output',\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: '#63B3ED', color: 'white', width: NODE_WIDTH }\r\n  },\r\n  {\r\n    id: 'affix_6',\r\n    position: { x: (NODE_WIDTH + GAP) * 6, y: THIRD_Y },\r\n    data: { label: '-бу' },\r\n    type: 'output',\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: '#63B3ED', color: 'white', width: NODE_WIDTH }\r\n  },\r\n  {\r\n    id: 'affix_7',\r\n    position: { x: (NODE_WIDTH + GAP) * 7, y: THIRD_Y },\r\n    data: { label: '-пу' },\r\n    type: 'output',\r\n    connectable: false,\r\n    selectable: false,\r\n    style: { background: '#63B3ED', color: 'white', width: NODE_WIDTH }\r\n  }\r\n]\r\n\r\nconst initialEdges = [\r\n  {\r\n    id: 'root-last_word_0',\r\n    source: 'root',\r\n    target: 'last_word_0',\r\n    label: 'а, я, ы',\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'root-last_word_1',\r\n    source: 'root',\r\n    target: 'last_word_1',\r\n    label: 'э, е, и',\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'root-last_word_2',\r\n    source: 'root',\r\n    target: 'last_word_2',\r\n    label: 'ө, ү',\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'root-last_word_3',\r\n    source: 'root',\r\n    target: 'last_word_3',\r\n    label: 'о, ё, у, ю',\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n\r\n  {\r\n    id: 'last_word_0-affix_0',\r\n    source: 'last_word_0',\r\n    target: 'affix_0',\r\n    label: `Глас / ${S_Z}`,\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'last_word_0-affix_1',\r\n    source: 'last_word_0',\r\n    target: 'affix_1',\r\n    label: S_G,\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'last_word_1-affix_2',\r\n    source: 'last_word_1',\r\n    target: 'affix_2',\r\n    label: `Глас / ${S_Z}`,\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'last_word_1-affix_3',\r\n    source: 'last_word_1',\r\n    target: 'affix_3',\r\n    label: S_G,\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'last_word_2-affix_4',\r\n    source: 'last_word_2',\r\n    target: 'affix_4',\r\n    label: `Глас / ${S_Z}`,\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'last_word_2-affix_5',\r\n    source: 'last_word_2',\r\n    target: 'affix_5',\r\n    label: S_G,\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'last_word_3-affix_6',\r\n    source: 'last_word_3',\r\n    target: 'affix_6',\r\n    label: `Глас / ${S_Z}`,\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  },\r\n  {\r\n    id: 'last_word_3-affix_7',\r\n    source: 'last_word_3',\r\n    target: 'affix_7',\r\n    label: S_G,\r\n    animated: true,\r\n    selectable: false,\r\n    markerEnd: { type: MarkerType.ArrowClosed }\r\n  }\r\n]\r\n\r\nconst MultiAffix = (): JSX.Element => {\r\n  return (\r\n    <div style={{ width: `${TOTAL_WIDTH}px`, height: '450px' }}>\r\n      <ReactFlow nodes={initialNodes}\r\n        // nodesDraggable={false}\r\n        // panOnDrag={false}\r\n                 edges={initialEdges}\r\n      >\r\n        <Controls />\r\n        <MiniMap pannable/>\r\n      </ReactFlow>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MultiAffix","/**\r\n * Компонент вопросительных аффиксов\r\n *\r\n * @author Markitanov Vadim\r\n * @since 14.05.2023\r\n */\r\nimport React from 'react'\r\nimport './QuestionAffix.css'\r\nimport PhraseItem from '../../common/PhraseItem'\r\nimport MultiAffix from '../multiAffix/MultiAffix'\r\n\r\nconst QuestionAffix = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>Вопросительные аффиксы</h2>\r\n        В вопросительных предложениях к словам, которые выражают предмет интереса присоединяется вопросительных аффикс <b>-бы?</b> (См. таблицу ниже)\r\n        <br/>\r\n        Такие вопросительные предложения называются <b>общими.</b> Они требуют ответа <b>&quot;ооба&rdquo;</b> (да) или <b>&quot;жок&rdquo;</b> (нет).\r\n        <br/>\r\n        Отрицательный ответ на вопрос содержит отрицание <b>&quot;эмес&rdquo;</b> (не). В предложении оно находится после слова, которое отрицается.\r\n        <PhraseItem kg={(<>Сергей студент<u>пи?</u></>)} ru={'Сергей студент?'}/>\r\n        <PhraseItem kg={'Ооба, ал студент.'} ru={'Да, он студент.'}/>\r\n        <PhraseItem kg={(<>(Жок, студент <u>эмес.</u>)</>)} ru={'(Нет, не студент.)'}/>\r\n        <br/>\r\n        <PhraseItem kg={(<>Бул журнал кызыктуу<u>бу?</u></>)} ru={'Этот журнал интересный?'}/>\r\n        <PhraseItem kg={'Ооба, кызыктуу.'} ru={'Да, интересный.'}/>\r\n        <PhraseItem kg={(<>(Жок, кызыктуу <u>эмес.</u>)</>)} ru={'(Нет, не интересный.)'}/>\r\n        В альтернативных вопросительных предложениях используется союз <b>же</b> (или)\r\n        <PhraseItem kg={(<>Бул китеппи <u>же</u> дептерби?</>)} ru={'Это книга или тетрадь?'}/>\r\n        <PhraseItem kg={(<>Бул газета жаңыбы <u>же</u> эскиби?</>)} ru={'Эта газета новая или старая?'}/>\r\n        <br/>\r\n        <table>\r\n          <tbody>\r\n          <tr>\r\n            <td style={{ textAlign: 'left' }}>Последняя гласная буква корня:</td>\r\n            <td colSpan={2}><b>а, я, ы</b></td>\r\n            <td colSpan={2}><b>э, е, и</b></td>\r\n            <td colSpan={2}><b>ө, ү</b></td>\r\n            <td colSpan={2}><b>о, ё, у, ю</b></td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ textAlign: 'left' }}>Последняя буква корня:</td>\r\n            <td>Глас. или звон согл.</td>\r\n            <td>Глухая согл.</td>\r\n            <td>Глас. или звон согл.</td>\r\n            <td>Глухая согл.</td>\r\n            <td>Глас. или звон согл.</td>\r\n            <td>Глухая согл.</td>\r\n            <td>Глас. или звон согл.</td>\r\n            <td>Глухая согл.</td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ textAlign: 'left' }}>Аффикс:</td>\r\n            <td><b>-бы</b></td>\r\n            <td><b>-пы</b></td>\r\n            <td><b>-би</b></td>\r\n            <td><b>-пи</b></td>\r\n            <td><b>-бү</b></td>\r\n            <td><b>-пү</b></td>\r\n            <td><b>-бу</b></td>\r\n            <td><b>-пу</b></td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ textAlign: 'left' }}>Примеры:</td>\r\n            <td>\r\n              Бар<b>бы</b>? (Есть?)\r\n            </td>\r\n            <td>\r\n              Кызык<b>пы</b>? (Интересный?)\r\n            </td>\r\n            <td>\r\n              Текшерди<b>би</b>? (Проверено?)\r\n            </td>\r\n            <td>\r\n              Китеп<b>пи</b>? (Книга?)\r\n            </td>\r\n            <td>\r\n              Үйрендүң<b>бү?</b>\r\n            </td>\r\n            <td>\r\n              Төрт<b>пү</b>? (Четыре?)\r\n            </td>\r\n            <td>\r\n              Коңгуроо<b>бу</b>? (Звонок?)\r\n            </td>\r\n            <td>\r\n              Чоголуш<b>пү</b>? (Собрание?)\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n        <MultiAffix/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default QuestionAffix\r\n","/**\r\n * Компонент окончаний\r\n *\r\n * @author Markitanov Vadim\r\n * @since 14.05.2023\r\n */\r\nimport React from 'react'\r\nimport type { TabsProps } from 'antd'\r\nimport { Tabs } from 'antd'\r\nimport QuestionAffix from './questionAffix/QuestionAffix'\r\n\r\nconst Affixes = (): JSX.Element => {\r\n  const items: TabsProps['items'] = [\r\n    {\r\n      key: '1',\r\n      label: 'Вопр',\r\n      children: (<QuestionAffix/>)\r\n    }, {\r\n      key: '2',\r\n      label: 'Множ',\r\n      children: 'В разработке',\r\n      disabled: true\r\n    }\r\n  ]\r\n  return (\r\n    <>\r\n      <b>Аффикс</b> (лат. affixis – прикрепленный) (Мүчө) – служебная\r\n      морфема, которая самостоятельно без корня не употребляется, служит\r\n      для образования различных форм одного и того же слова или\r\n      образования другого однокоренного слова. Таким образом, аффиксы\r\n      делятся на формообразующие и словообразовательные.\r\n      <Tabs tabPosition={'left'} items={items}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Affixes\r\n","/**\r\n * Компонент фразы\r\n *\r\n * @author Markitanov Vadim\r\n * @since 14.05.2023\r\n */\r\nimport React from 'react'\r\n\r\ninterface PhraseItemProps {\r\n  kg: string | JSX.Element\r\n  ru: string\r\n}\r\n\r\nconst PhraseItem = (props: PhraseItemProps): JSX.Element => {\r\n  return (\r\n    <div>\r\n      - {props.kg}&nbsp;&nbsp;<i>- {props.ru}</i>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhraseItem\r\n"],"names":["SECOND_Y","THIRD_Y","NODE_WIDTH","MIDDLE_WIDTH","MIDDLE_COLOR","S_G","S_Z","initialNodes","id","position","x","y","data","label","type","connectable","selectable","style","background","color","width","initialEdges","source","target","animated","markerEnd","MarkerType","concat","_jsx","height","children","_jsxs","ReactFlow","nodes","edges","Controls","MiniMap","pannable","_Fragment","PhraseItem","kg","ru","textAlign","colSpan","MultiAffix","items","key","QuestionAffix","disabled","Tabs","tabPosition","props"],"sourceRoot":""}