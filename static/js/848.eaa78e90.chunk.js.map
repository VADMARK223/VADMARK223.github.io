{"version":3,"file":"static/js/848.eaa78e90.chunk.js","mappings":"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","sources":["components/algorithmTables/CommonTable.tsx","components/algorithmTables/multiplicity/MultiplicityAffixPractice.tsx","components/algorithmTables/multiplicity/Multiplicity.tsx","components/common/AffixItem.tsx","components/common/Letter.tsx","components/common/LettersPanel.tsx","components/common/PhraseItem.tsx","components/common/WordAffix.tsx","service/utils.ts"],"sourcesContent":["/**\r\n * Общий компонент для алгоритмических таблиц\r\n *\r\n * @author Markitanov Vadim\r\n * @since 10.08.2023\r\n */\r\nimport React from 'react'\r\nimport LettersPanel from '../common/LettersPanel'\r\nimport { Space } from 'antd'\r\n\r\ninterface CommonTableProps {\r\n  title: string\r\n  children: JSX.Element | JSX.Element[] | string\r\n}\r\n\r\nconst CommonTable = (props: CommonTableProps): JSX.Element => {\r\n  const { title, children } = props\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      <Space direction={'vertical'}>\r\n        <LettersPanel/>\r\n        {children}\r\n      </Space>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CommonTable\r\n","/**\r\n * Компонент\r\n *\r\n * @author Markitanov Vadim\r\n * @since 22.05.2023\r\n */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Space, Checkbox, Tooltip } from 'antd'\r\nimport { QuestionCircleTwoTone, CheckCircleTwoTone, ExclamationCircleTwoTone } from '@ant-design/icons'\r\nimport Letter from '../../common/Letter'\r\nimport KgInput from '../../common/KgInput'\r\nimport { isVowelLetter, isVoicedConsonant, isVoicelessConsonant } from '../../../service/utils'\r\n\r\ninterface MultiplicityAffixPracticeProps {\r\n  word: string\r\n}\r\n\r\nconst MultiplicityAffixPractice = (props: MultiplicityAffixPracticeProps): JSX.Element => {\r\n  const { word } = props\r\n  const valueState = useState('')\r\n  const wordArray = word.split('')\r\n  const [answerState, setAnswerState] = useState<boolean | null>(null) // Состояние ответа: null - неизвестно, true - верно, false - неверно\r\n  const [showHint, setShowHint] = useState<boolean>(false)\r\n\r\n  const getLastVowelLetter = (): string => {\r\n    let result: string = '-'\r\n    for (let i = wordArray.length - 1; i >= 0; i--) {\r\n      if (isVowelLetter(wordArray[i])) {\r\n        result = wordArray[i]\r\n        break\r\n      }\r\n    }\r\n    return result\r\n  }\r\n  // Последняя гласная буква корня\r\n  const lastVowelLetter: string = getLastVowelLetter()\r\n  // Последняя буква слова\r\n  const lastLetter = wordArray[wordArray.length - 1]\r\n\r\n  let rightAffix = '-'\r\n  if (lastVowelLetter === 'а' || lastVowelLetter === 'я' || lastVowelLetter === 'ы') {\r\n    if (isVowelLetter(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n      rightAffix = 'лар'\r\n    } else if (isVoicedConsonant(lastLetter)) {\r\n      rightAffix = 'дар'\r\n    } else if (isVoicelessConsonant(lastLetter)) {\r\n      rightAffix = 'тар'\r\n    }\r\n  } else if (lastVowelLetter === 'э' || lastVowelLetter === 'е' || lastVowelLetter === 'и') {\r\n    if (isVowelLetter(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n      rightAffix = 'лер'\r\n    } else if (isVoicedConsonant(lastLetter)) {\r\n      rightAffix = 'дер'\r\n    } else if (isVoicelessConsonant(lastLetter)) {\r\n      rightAffix = 'тер'\r\n    }\r\n  } else if (lastVowelLetter === 'ө' || lastVowelLetter === 'ү') {\r\n    if (isVowelLetter(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n      rightAffix = 'лөр'\r\n    } else if (isVoicedConsonant(lastLetter)) {\r\n      rightAffix = 'дөр'\r\n    } else if (isVoicelessConsonant(lastLetter)) {\r\n      rightAffix = 'төр'\r\n    }\r\n  } else if (lastVowelLetter === 'о' || lastVowelLetter === 'ё' || lastVowelLetter === 'у' || lastVowelLetter === 'ю') {\r\n    if (lastVowelLetter === 'о' || lastVowelLetter === 'ё') {\r\n      if (isVowelLetter(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n        rightAffix = 'лор'\r\n      } else if (isVoicedConsonant(lastLetter)) {\r\n        rightAffix = 'дор'\r\n      } else if (isVoicelessConsonant(lastLetter)) {\r\n        rightAffix = 'тор'\r\n      }\r\n    } else if (lastVowelLetter === 'у' || lastVowelLetter === 'ю') {\r\n      if (isVowelLetter(lastLetter) || lastLetter === 'й' || lastLetter === 'р') {\r\n        rightAffix = 'лар'\r\n      } else if (isVoicedConsonant(lastLetter)) {\r\n        rightAffix = 'дар'\r\n      } else if (isVoicelessConsonant(lastLetter)) {\r\n        rightAffix = 'тар'\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (valueState[0] !== '') {\r\n      setAnswerState(valueState[0].toLowerCase() === rightAffix.toLowerCase())\r\n    } else {\r\n      setAnswerState(null)\r\n    }\r\n  }, [valueState[0]])\r\n\r\n  const AnswerStateIcon = (): JSX.Element => {\r\n    if (answerState === null) {\r\n      return (<Tooltip title={'Введите аффикс'}><QuestionCircleTwoTone twoToneColor={'orange'}/></Tooltip>)\r\n    }\r\n\r\n    if (answerState) {\r\n      return (<Tooltip title={'Ответ верный'}><CheckCircleTwoTone twoToneColor=\"#52c41a\"/></Tooltip>)\r\n    }\r\n\r\n    return (<Tooltip title={'Ответ неверный'}><ExclamationCircleTwoTone twoToneColor={'red'}/></Tooltip>)\r\n  }\r\n\r\n  return (\r\n    <Space>\r\n      <div style={{ minWidth: '50px' }}>\r\n        {word}\r\n      </div>\r\n      <KgInput valueState={valueState}\r\n               placeholder={'Впишите аффикс множественного числа'}\r\n               width={'80px'}\r\n      />\r\n      <AnswerStateIcon/>\r\n      <Tooltip title={'Показывать подсказку'}>\r\n        <Checkbox checked={showHint}\r\n                  onChange={() => {\r\n                    setShowHint(!showHint)\r\n                  }}/>\r\n      </Tooltip>\r\n      {showHint && <>\r\n          <b>{rightAffix}</b>Последняя гласная буква корня: <Letter value={lastVowelLetter}/>\r\n          Последняя буква слова: <Letter value={lastLetter}/>\r\n      </>}\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default MultiplicityAffixPractice\r\n","/**\r\n * Компонент\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React, { useEffect, useState } from 'react'\r\nimport MultiplicityAffixPractice from './MultiplicityAffixPractice'\r\nimport { CaretUpOutlined } from '@ant-design/icons'\r\nimport { FloatButton } from 'antd'\r\nimport Letter, { VOWELS_NAME, VOICED_CONSONANTS_NAME, VOICELESS_CONSONANTS_NAME } from '../../common/Letter'\r\nimport AffixItem from '../../common/AffixItem'\r\nimport WordAffix from '../../common/WordAffix'\r\nimport PhraseItem from '../../common/PhraseItem'\r\nimport { shuffleArray } from '../../../service/utils'\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst Multiplicity = (): JSX.Element => {\r\n  const [isAtTop, setIsAtTop] = useState(false)\r\n\r\n  const scrollUpHandler = (): void => {\r\n    scroll(0, 0)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (): void => {\r\n      const isTop = window.scrollY === 0\r\n      setIsAtTop(isTop)\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll)\r\n\r\n    // Очистка слушателя событий при размонтировании компонента\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [])\r\n\r\n  const getIsTop = (): string | undefined => {\r\n    if (isAtTop) {\r\n      return 'none'\r\n    } else {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  const practiceInitArray: string[] = ['кошуна', 'театр', 'адам', 'бак', 'текче', 'батир', 'тил', 'адис', 'күзгү', 'күн', 'сөз', 'чөнтөк', 'пальто', 'кол', 'стадион', 'дос', 'курбу', 'комуз', 'жоолук']\r\n  const practiceShuffledArray: string[] = shuffleArray(practiceInitArray)\r\n\r\n  return (\r\n    <CommonTable title={'№10 Образование множественного числа'}>\r\n      <table>\r\n        <thead>\r\n        <tr>\r\n          <td colSpan={2}>Последняя гласная буква корня</td>\r\n          <td>Последняя буква корня</td>\r\n          <td>Аффикс</td>\r\n          <td>Пример</td>\r\n          <td>Перевод</td>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n          <td rowSpan={5} colSpan={2}>а, я, ы</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'китепкан'} affix={<Letter value={'а'}/>}/> - <WordAffix root={'китепкана'} affix={'лар'}/>\r\n          </td>\r\n          <td>\r\n            библиотека - библиотеки\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'шаа'} affix={<Letter value={'р'}/>}/> - <WordAffix root={'шаар'} affix={'лар'}/>\r\n          </td>\r\n          <td>\r\n            город - города\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'ада'} affix={<Letter value={'м'}/>}/> - <WordAffix root={'адам'} affix={'дар'}/>\r\n          </td>\r\n          <td>\r\n            человек - люди\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'мышы'} affix={<Letter value={'к'}/>}/> - <WordAffix root={'мышык'} affix={'тар'}/>\r\n          </td>\r\n          <td>\r\n            кот - коты\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td rowSpan={5} colSpan={2}>э, е, и</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лер'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'кем'} affix={<Letter value={'е'}/>}/> - <WordAffix root={'кеме'} affix={'лер'}/><br/>\r\n          </td>\r\n          <td>\r\n            корабль - корабли\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'музе'} affix={<Letter value={'й'}/>}/> - <WordAffix root={'музей'} affix={'лер'}/>\r\n          </td>\r\n          <td>\r\n            музей - музеи\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дер'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'мугали'} affix={<Letter value={'м'}/>}/> - <WordAffix root={'мугалим'} affix={'дер'}/>\r\n          </td>\r\n          <td>\r\n            учитель - учителя\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тер'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'ките'} affix={<Letter value={'п'}/>}/> - <WordAffix root={'китеп'} affix={'тер'}/>\r\n          </td>\r\n          <td>\r\n            книга - книги\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td rowSpan={5} colSpan={2}>ө ү</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лөр'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'сүрөтч'} affix={<Letter value={'ү'}/>}/> - <WordAffix root={'сүрөтчү'} affix={'лөр'}/>\r\n          </td>\r\n          <td>\r\n            художник - художники\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'ү'} affix={<Letter value={'й'}/>}/> - <WordAffix root={'үй'} affix={'лөр'}/>\r\n          </td>\r\n          <td>\r\n            дом - дома\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дөр'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'кө'} affix={<Letter value={'л'}/>}/> - <WordAffix root={'көл'} affix={'дөр'}/>\r\n          </td>\r\n          <td>\r\n            озеро - озера\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'төр'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'көйнө'} affix={<Letter value={'к'}/>}/> - <WordAffix root={'көйнөк'} affix={'төр'}/>\r\n          </td>\r\n          <td>\r\n            платье - платья\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td rowSpan={10}>о ё у ю</td>\r\n          <td rowSpan={5}>о ё</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лор'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'коро'} affix={<Letter value={'о'}/>}/> - <WordAffix root={'короо'} affix={'лор'}/>\r\n          </td>\r\n          <td>\r\n            двор - дворы\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'то'} affix={<Letter value={'й'}/>}/> - <WordAffix root={'той'} affix={'лор'}/>\r\n          </td>\r\n          <td>\r\n            пиршество - пиршества\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дор'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'ко'} affix={<Letter value={'л'}/>}/> - <WordAffix root={'кол'} affix={'дор'}/>\r\n          </td>\r\n          <td>\r\n            рука - руки\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тор'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'коно'} affix={<Letter value={'к'}/>}/> - <WordAffix root={'конок'} affix={'тор'}/>\r\n          </td>\r\n          <td>\r\n            гость - гости\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td rowSpan={5}>у ю</td>\r\n          <td>\r\n            {VOWELS_NAME}\r\n          </td>\r\n          <td rowSpan={3}>\r\n            <AffixItem value={'лар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'окууч'} affix={<Letter value={'у'}/>}/> - <WordAffix root={'окуучу'} affix={'лар'}/>\r\n          </td>\r\n          <td>\r\n            ученик - ученики\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'й'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Letter value={'р'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICED_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'дар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'буй'} affix={<Letter value={'м'}/>}/> - <WordAffix root={'буйм'} affix={'дар'}/>\r\n          </td>\r\n          <td>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            {VOICELESS_CONSONANTS_NAME}\r\n          </td>\r\n          <td>\r\n            <AffixItem value={'тар'}/>\r\n          </td>\r\n          <td>\r\n            <WordAffix root={'жоолу'} affix={<Letter value={'к'}/>}/> - <WordAffix root={'жоолук'} affix={'тар'}/>\r\n          </td>\r\n          <td>\r\n            платок - платки\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n      <p>\r\n        Место аффикса множественного числа - всегда после корня.<br/>\r\n        Аффиксы множественного числа универсальны, обслуживают не только имена существительные:\r\n      </p>\r\n      <table>\r\n        <tbody>\r\n        <tr>\r\n          <td><WordAffix root={'чоң'} affix={'дор'}/></td>\r\n          <td>большие; взрослые</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'жаш'} affix={'таш'}/></td>\r\n          <td>молодые</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'кичинекей'} affix={'лер'}/></td>\r\n          <td>маленькие, малыши</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'тиги'} affix={'лер'}/></td>\r\n          <td>те</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'бу'} affix={'лар'}/></td>\r\n          <td>эти</td>\r\n        </tr>\r\n        <tr>\r\n          <td><WordAffix root={'булар ким'} affix={'дер'}/></td>\r\n          <td>кто это? (по отношению к группе лиц)</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n      <p>\r\n        2. В роли подлежащего, сказуемого или дополнения в предложениях иногда выступают <b>собирательные</b> числительные, которые отвечают на вопрос <b>канчоо?</b> (сколько?). <br/>\r\n        Из всего семь: <br/>\r\n        бирөө, экөө (двое), үчөө (трое), төртөө (четверо), бешөө (пятеро), алтоо (шестеро), жетөө (семеро).\r\n      </p>\r\n      <PhraseItem kg={'Китепканада он адам:'} ru={'В библиотеке десять человек:'}/>\r\n      <PhraseItem kg={'бирөө - окутуучу,'} ru={'один - преподователь,'}/>\r\n      <PhraseItem kg={'үчөө - аспирант,'} ru={'трое - аспиранты,'}/>\r\n      <PhraseItem kg={'алтоо - студент,'} ru={'шестеро - студенты.'}/>\r\n      <div className={'center-block'}>УПРАЖНЕНИЯ</div>\r\n      <>\r\n        {practiceShuffledArray.map(value => (<div key={value}><MultiplicityAffixPractice word={value}/></div>))}\r\n      </>\r\n      <FloatButton icon={<CaretUpOutlined/>} type=\"primary\" style={{ right: 20, display: getIsTop() }} onClick={scrollUpHandler}/>\r\n    </CommonTable>\r\n  )\r\n}\r\n\r\nexport default Multiplicity\r\n","/**\r\n * Компонент аффикса\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\n\r\ninterface AffixItemProps {\r\n  value: string\r\n}\r\n\r\nconst AffixItem = (props: AffixItemProps): JSX.Element => {\r\n  const { value } = props\r\n  return (\r\n    <span style={{ color: 'orangered' }}>\r\n      <b>-{value}</b>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AffixItem\r\n","/**\r\n * Компонент буквы\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\nimport { Tooltip } from 'antd'\r\n\r\n/**\r\n * Гласные\r\n */\r\nexport const VOWELS_NAME: string = 'Гласная'\r\nexport const VOWELS: string[] = ['а', 'е', 'ё', 'и', 'о', 'ө', 'у', 'ү', 'ы', 'э', 'ю', 'я']\r\n\r\n/**\r\n * Звонкие согласные\r\n */\r\nexport const VOICED_CONSONANTS_NAME: string = 'Звонкая согласная'\r\nexport const VOICED_CONSONANTS: string[] = ['б', 'в', 'г', 'д', 'ж', 'з', 'л', 'м', 'н', 'ң', 'р', 'й']\r\n\r\n/**\r\n * Глухие согласные\r\n */\r\nexport const VOICELESS_CONSONANTS_NAME: string = 'Глухая согласная'\r\nexport const VOICELESS_CONSONANTS: string[] = ['п', 'ф', 'к', 'т', 'ш', 'с', 'х', 'ч', 'щ', 'ц']\r\n\r\ninterface LetterProps {\r\n  value: string\r\n  bold?: boolean\r\n  underline?: boolean\r\n}\r\n\r\nconst Letter = (props: LetterProps): JSX.Element => {\r\n  const { value, bold = false, underline = false } = props\r\n\r\n  const getTooltip = (): string => {\r\n    if (VOWELS.includes(value)) {\r\n      return VOWELS_NAME\r\n    }\r\n\r\n    if (VOICED_CONSONANTS.includes(value)) {\r\n      return VOICED_CONSONANTS_NAME\r\n    }\r\n\r\n    if (VOICELESS_CONSONANTS.includes(value)) {\r\n      return VOICELESS_CONSONANTS_NAME\r\n    }\r\n\r\n    return 'Неизвестный тип буквы'\r\n  }\r\n\r\n  const getColor = (): string => {\r\n    if (VOWELS.includes(value)) {\r\n      return 'red'\r\n    }\r\n\r\n    if (VOICED_CONSONANTS.includes(value)) {\r\n      return 'green'\r\n    }\r\n\r\n    if (VOICELESS_CONSONANTS.includes(value)) {\r\n      return 'blue'\r\n    }\r\n\r\n    return 'black'\r\n  }\r\n\r\n  const getBold = (): 'bold' | undefined => {\r\n    return bold ? 'bold' : undefined\r\n  }\r\n\r\n  const getUnderline = (): 'underline' | undefined => {\r\n    return underline ? 'underline' : undefined\r\n  }\r\n\r\n  return (\r\n    <Tooltip title={getTooltip()}>\r\n    <span style={{ cursor: 'pointer', color: getColor(), fontWeight: getBold(), textDecoration: getUnderline() }}>\r\n      {value}\r\n    </span>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default Letter\r\n","/**\r\n * Компонент c буквами\r\n *\r\n * @author Markitanov Vadim\r\n * @since 26.05.2023\r\n */\r\nimport React from 'react'\r\nimport { Space } from 'antd'\r\nimport Letter, { VOWELS, VOICED_CONSONANTS, VOICELESS_CONSONANTS } from './Letter'\r\n\r\nconst LettersPanel = (): JSX.Element => {\r\n  return (\r\n    <Space size={1} direction={'vertical'}>\r\n      <Space>\r\n        <span>Краткие гласные:</span> {VOWELS.map(value => (<Letter key={value} value={value} bold/>))}\r\n      </Space>\r\n      <Space>\r\n        <span>Звонкие согласные:</span>{VOICED_CONSONANTS.map(value => (<Letter key={value} value={value} bold/>))}\r\n      </Space>\r\n      <Space>\r\n        <span>Глухие согласные:</span> {VOICELESS_CONSONANTS.map(value => (<Letter key={value} value={value} bold/>))}\r\n      </Space>\r\n    </Space>\r\n  )\r\n}\r\n\r\nexport default LettersPanel\r\n","/**\r\n * Компонент фразы\r\n *\r\n * @author Markitanov Vadim\r\n * @since 14.05.2023\r\n */\r\nimport React from 'react'\r\n\r\ninterface PhraseItemProps {\r\n  kg: string | JSX.Element\r\n  ru: string\r\n}\r\n\r\nconst PhraseItem = (props: PhraseItemProps): JSX.Element => {\r\n  return (\r\n    <div>\r\n      - {props.kg}&nbsp;&nbsp;<i>- {props.ru}</i>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhraseItem\r\n","/**\r\n * Компонент выделения аффиксов у слова\r\n *\r\n * @author Markitanov Vadim\r\n * @since 21.05.2023\r\n */\r\nimport React from 'react'\r\nimport Letter from './Letter'\r\n\r\ninterface WordAffixProps {\r\n  root: string | JSX.Element\r\n  affix: string | JSX.Element\r\n}\r\n\r\nconst WordAffix = (props: WordAffixProps): JSX.Element => {\r\n  const { root, affix } = props\r\n  if (React.isValidElement(affix)) {\r\n    const letter = affix as JSX.Element\r\n    return <>\r\n      {root}<Letter value={letter.props.value as string} bold={true} underline={true}/>\r\n    </>\r\n  } else {\r\n    return (\r\n      <>\r\n        {root}<b><u>{affix as string}</u></b>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WordAffix\r\n","import { VOWELS, VOICED_CONSONANTS, VOICELESS_CONSONANTS } from '../components/common/Letter'\r\n\r\n/**\r\n * @author Markitanov Vadim\r\n * @since 15.04.2023\r\n */\r\nexport const generateRandomInteger = (max: number): number => Math.floor(Math.random() * max) + 1\r\n\r\n/**\r\n * Количество цифр в числе.\r\n *\r\n * @param {number} value - число.\r\n * @returns {number} количество цифр\r\n */\r\nexport const countDigitsInNumber = (value: number): number => String(value).length\r\n\r\n/**\r\n * Метод перемешивания массива\r\n * @param {string[]} array\r\n * @returns {string[]}\r\n */\r\nexport const shuffleArray = (array: string[]): string[] => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n  return array\r\n}\r\n\r\n/**\r\n * Метод проверяет гласная ли это буква.\r\n * @param {string} letter - буква.\r\n * @returns {boolean} результат.\r\n */\r\nexport const isVowelLetter = (letter: string): boolean => {\r\n  return VOWELS.includes(letter)\r\n}\r\n\r\n/**\r\n * Метод проверяет звонкая согласная ли это буква.\r\n * @param {string} letter - буква.\r\n * @returns {boolean} результат.\r\n */\r\nexport const isVoicedConsonant = (letter: string): boolean => {\r\n  return VOICED_CONSONANTS.includes(letter)\r\n}\r\n\r\n/**\r\n * Метод проверяет глухая согласная ли это буква.\r\n * @param {string} letter - буква.\r\n * @returns {boolean} результат.\r\n */\r\nexport const isVoicelessConsonant = (letter: string): boolean => {\r\n  return VOICELESS_CONSONANTS.includes(letter)\r\n}\r\n"],"names":["props","title","children","_jsxs","_Fragment","_jsx","Space","direction","LettersPanel","word","valueState","useState","wordArray","split","_useState","_useState2","_slicedToArray","answerState","setAnswerState","_useState3","_useState4","showHint","setShowHint","lastVowelLetter","result","i","length","isVowelLetter","getLastVowelLetter","lastLetter","rightAffix","isVoicedConsonant","isVoicelessConsonant","useEffect","toLowerCase","AnswerStateIcon","Tooltip","QuestionCircleTwoTone","twoToneColor","CheckCircleTwoTone","ExclamationCircleTwoTone","style","minWidth","KgInput","placeholder","width","Checkbox","checked","onChange","Letter","value","isAtTop","setIsAtTop","handleScroll","isTop","window","scrollY","addEventListener","removeEventListener","practiceShuffledArray","shuffleArray","CommonTable","colSpan","rowSpan","VOWELS_NAME","AffixItem","WordAffix","root","affix","VOICED_CONSONANTS_NAME","VOICELESS_CONSONANTS_NAME","PhraseItem","kg","ru","className","map","MultiplicityAffixPractice","FloatButton","icon","CaretUpOutlined","type","right","display","onClick","scroll","color","VOWELS","VOICED_CONSONANTS","VOICELESS_CONSONANTS","_props$bold","bold","_props$underline","underline","includes","cursor","fontWeight","undefined","textDecoration","size","React","letter","generateRandomInteger","max","Math","floor","random","countDigitsInNumber","String","array","j","_ref"],"sourceRoot":""}